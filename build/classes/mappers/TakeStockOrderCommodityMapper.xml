<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jl.psi.mapper.TakeStockOrderCommodityMapper">
  <resultMap id="BaseResultMap" type="com.jl.psi.model.TakeStockOrderCommodity">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="take_stock_order_id" jdbcType="INTEGER" property="takeStockOrderId" />
    <result column="commodity_specification_id" jdbcType="INTEGER" property="commoditySpecificationId" />
    <result column="inventory_num" jdbcType="INTEGER" property="inventoryNum" />
    <result column="real_num" jdbcType="INTEGER" property="realNum" />
    <result column="profit_or_loss_num" jdbcType="INTEGER" property="profitOrLossNum" />
    <result column="unit_price" jdbcType="DOUBLE" property="unitPrice" />
    <result column="money" jdbcType="DOUBLE" property="money" />
  </resultMap>
  <sql id="Base_Column_List">
    id, take_stock_order_id, commodity_specification_id, inventory_num, real_num, profit_or_loss_num, 
    unit_price, money
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from take_stock_order_commodity
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from take_stock_order_commodity
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jl.psi.model.TakeStockOrderCommodity">
    insert into take_stock_order_commodity (id, take_stock_order_id, commodity_specification_id, 
      inventory_num, real_num, profit_or_loss_num, 
      unit_price, money)
    values (#{id,jdbcType=INTEGER}, #{takeStockOrderId,jdbcType=INTEGER}, #{commoditySpecificationId,jdbcType=INTEGER}, 
      #{inventoryNum,jdbcType=INTEGER}, #{realNum,jdbcType=INTEGER}, #{profitOrLossNum,jdbcType=INTEGER}, 
      #{unitPrice,jdbcType=DOUBLE}, #{money,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.jl.psi.model.TakeStockOrderCommodity">
    insert into take_stock_order_commodity
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="takeStockOrderId != null">
        take_stock_order_id,
      </if>
      <if test="commoditySpecificationId != null">
        commodity_specification_id,
      </if>
      <if test="inventoryNum != null">
        inventory_num,
      </if>
      <if test="realNum != null">
        real_num,
      </if>
      <if test="profitOrLossNum != null">
        profit_or_loss_num,
      </if>
      <if test="unitPrice != null">
        unit_price,
      </if>
      <if test="money != null">
        money,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="takeStockOrderId != null">
        #{takeStockOrderId,jdbcType=INTEGER},
      </if>
      <if test="commoditySpecificationId != null">
        #{commoditySpecificationId,jdbcType=INTEGER},
      </if>
      <if test="inventoryNum != null">
        #{inventoryNum,jdbcType=INTEGER},
      </if>
      <if test="realNum != null">
        #{realNum,jdbcType=INTEGER},
      </if>
      <if test="profitOrLossNum != null">
        #{profitOrLossNum,jdbcType=INTEGER},
      </if>
      <if test="unitPrice != null">
        #{unitPrice,jdbcType=DOUBLE},
      </if>
      <if test="money != null">
        #{money,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jl.psi.model.TakeStockOrderCommodity">
    update take_stock_order_commodity
    <set>
      <if test="takeStockOrderId != null">
        take_stock_order_id = #{takeStockOrderId,jdbcType=INTEGER},
      </if>
      <if test="commoditySpecificationId != null">
        commodity_specification_id = #{commoditySpecificationId,jdbcType=INTEGER},
      </if>
      <if test="inventoryNum != null">
        inventory_num = #{inventoryNum,jdbcType=INTEGER},
      </if>
      <if test="realNum != null">
        real_num = #{realNum,jdbcType=INTEGER},
      </if>
      <if test="profitOrLossNum != null">
        profit_or_loss_num = #{profitOrLossNum,jdbcType=INTEGER},
      </if>
      <if test="unitPrice != null">
        unit_price = #{unitPrice,jdbcType=DOUBLE},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=DOUBLE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jl.psi.model.TakeStockOrderCommodity">
    update take_stock_order_commodity
    set take_stock_order_id = #{takeStockOrderId,jdbcType=INTEGER},
      commodity_specification_id = #{commoditySpecificationId,jdbcType=INTEGER},
      inventory_num = #{inventoryNum,jdbcType=INTEGER},
      real_num = #{realNum,jdbcType=INTEGER},
      profit_or_loss_num = #{profitOrLossNum,jdbcType=INTEGER},
      unit_price = #{unitPrice,jdbcType=DOUBLE},
      money = #{money,jdbcType=DOUBLE}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- 批量添加 -->
  <insert id="insertBeatch" parameterType="com.jl.psi.model.TakeStockOrderCommodity" useGeneratedKeys="true" keyProperty="id">
    insert into take_stock_order_commodity (
    	take_stock_order_id, 
    	commodity_specification_id,
    	inventory_num, 
    	real_num, 
    	profit_or_loss_num, 
   		unit_price, 
   		money
      )
    values <foreach collection="list" index="index" item="tsoc" separator=",">
	 ( #{tsoc.takeStockOrderId,jdbcType=INTEGER}, 
	   #{tsoc.commoditySpecificationId,jdbcType=INTEGER}, 
       #{tsoc.inventoryNum,jdbcType=INTEGER},
       #{tsoc.realNum,jdbcType=INTEGER}, 
       #{tsoc.profitOrLossNum,jdbcType=INTEGER}, 
       #{tsoc.unitPrice,jdbcType=DOUBLE}, 
       #{tsoc.money,jdbcType=DOUBLE}
      )
      </foreach>
  </insert>
  
   <!-- 根据盘点单id删除盘点商品信息 -->
  <delete id="deleteMsgByTakeStockOrderId" parameterType="java.lang.Integer">
  	delete 
    from take_stock_order_commodity
    where take_stock_order_id = #{takeStockOrderId,jdbcType=INTEGER}
  </delete>
  
   <!-- 根据盘点单id获取盘点商品列表 -->
  <select id="selectByTakeStockOrderId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
  	select 
	<include refid="Base_Column_List" /> 
    from take_stock_order_commodity
    where take_stock_order_id = #{takeStockOrderId,jdbcType=INTEGER}
  </select>
</mapper>