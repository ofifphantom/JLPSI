<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jl.psi.mapper.CommodityMapper">
	<resultMap id="BaseResultMap" type="com.jl.psi.model.Commodity">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="classification_id" jdbcType="INTEGER" property="classificationId" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="brand" jdbcType="VARCHAR" property="brand" />
		<result column="zero_stock" jdbcType="INTEGER" property="zeroStock" />
		<result column="shout_name" jdbcType="VARCHAR" property="shoutName" />
		<result column="mnemonic_code" jdbcType="VARCHAR" property="mnemonicCode" />
		<result column="basics_information" jdbcType="VARCHAR"
			property="basicsInformation" />
		<result column="attribute" jdbcType="VARCHAR" property="attribute" />
		<result column="identifier" jdbcType="VARCHAR" property="identifier" />
		<result column="supcto_id" jdbcType="INTEGER" property="supctoId" />
		<result column="taxes" jdbcType="DOUBLE" property="taxes" />
		<result column="temp_taxes" jdbcType="DOUBLE" property="tempTaxes" />
		<result column="is_presell" jdbcType="INTEGER" property="isPresell" />
		<result column="is_assemble" jdbcType="INTEGER" property="isAssemble" />
		<association property="classification" javaType="com.jl.psi.model.Classification"
			resultMap="ClassificationResultMap" />
		<association property="supcto" javaType="com.jl.psi.model.Supcto"
			resultMap="SupctoResultMap" />
		<collection property="commoditySpecifictions" ofType="com.jl.psi.model.CommoditySpecification" resultMap="CommoditySpecificationResultMap"/>
	</resultMap>
	
	<!-- 供货商信息 -->
	<resultMap id="SupctoResultMap" type="com.jl.psi.model.Supcto">
		<id column="sId" jdbcType="INTEGER" property="id" />
	    <result column="sName" jdbcType="VARCHAR" property="name" />
    </resultMap>
    
    <!-- 分类信息 -->
	<resultMap id="ClassificationResultMap" type="com.jl.psi.model.Classification">
		<id column="cfId" jdbcType="INTEGER" property="id" />
		<result column="cfName" jdbcType="VARCHAR" property="name" />
		<result column="parent_id" jdbcType="INTEGER" property="parentId" />
	</resultMap>
	
	<!-- 商品规格信息 -->
	<resultMap id="CommoditySpecificationResultMap" type="com.jl.psi.model.CommoditySpecification">
		<id column="csId" jdbcType="INTEGER" property="id" />
		<result column="specification_identifier" jdbcType="VARCHAR"
			property="specificationIdentifier" />
		<result column="specification_name" jdbcType="VARCHAR"
			property="specificationName" />
		<result column="commodity_id" jdbcType="INTEGER" property="commodityId" />
		<result column="quality_period" jdbcType="INTEGER" property="qualityPeriod" />
		<result column="quality_period_unit" jdbcType="VARCHAR"
			property="qualityPeriodUnit" />
		<result column="mini_order_quantity" jdbcType="INTEGER"
			property="miniOrderQuantity" />
		<result column="add_order_quantity" jdbcType="INTEGER"
			property="addOrderQuantity" />
		<result column="packaging_size" jdbcType="VARCHAR" property="packagingSize" />
		<result column="is_delete" jdbcType="INTEGER" property="isDelete" />
		<result column="warning_number" jdbcType="INTEGER" property="warningNumber" />
		<result column="weight" jdbcType="DOUBLE" property="weight" />
		<result column="operator_identifier" jdbcType="VARCHAR"
			property="operatorIdentifier" />
		<result column="operator_time" jdbcType="TIMESTAMP" property="operatorTime" />
		<result column="state" jdbcType="INTEGER" property="state" />
		<association property="person" javaType="com.jl.psi.model.Person"
			resultMap="PersonResultMap" />
		<collection property="units" ofType="com.jl.psi.model.Unit" resultMap="UnitResultMap"/>
		<collection property="inventories" ofType="com.jl.psi.model.Inventory" resultMap="InventoryResultMap"/>
	</resultMap>
	
	<!-- 用户信息 -->
	<resultMap id="PersonResultMap" type="com.jl.psi.model.Person">
		<result column="uname" jdbcType="VARCHAR" property="name" />
	</resultMap>
	
	<!-- 单位信息 -->
	<resultMap id="UnitResultMap" type="com.jl.psi.model.Unit">
		<id column="uId" jdbcType="INTEGER" property="id" />
		<result column="unName" jdbcType="VARCHAR" property="name" />
		<result column="uSpecificationId" jdbcType="INTEGER" property="specificationId" />
		<result column="ratio_denominator" jdbcType="INTEGER" property="ratioDenominator" />
		<result column="ratio_molecular" jdbcType="INTEGER" property="ratioMolecular" />
		<result column="purchase_price" jdbcType="DOUBLE" property="purchasePrice" />
		<result column="commonly_price" jdbcType="DOUBLE" property="commonlyPrice" />
		<result column="mini_price" jdbcType="DOUBLE" property="miniPrice" />
		<result column="bar_code" jdbcType="VARCHAR" property="barCode" />
		<result column="sales_unit" jdbcType="VARCHAR" property="salesUnit" />
		<result column="basic_unit" jdbcType="INTEGER" property="basicUnit" />
		<result column="warehouse_unit" jdbcType="VARCHAR" property="warehouseUnit" />
		<result column="purchasing_unit" jdbcType="VARCHAR" property="purchasingUnit" />
		<result column="mini_purchasing" jdbcType="INTEGER" property="miniPurchasing" />
	</resultMap>
	
	<!-- 库存信息 -->
	<resultMap id="InventoryResultMap" type="com.jl.psi.model.Inventory">
		<id column="inId" jdbcType="INTEGER" property="id" />
		<result column="inSpecificationId" jdbcType="INTEGER" property="specificationId" />
		<result column="warehouse_id" jdbcType="INTEGER" property="warehouseId" />
		<result column="inventory" jdbcType="INTEGER" property="inventory" />
		<result column="presell_inventory" jdbcType="INTEGER" property="presellInventory" />
		<result column="occupied_inventory" jdbcType="INTEGER"
			property="occupiedInventory" />
		<result column="max_inventory" jdbcType="INTEGER" property="maxInventory" />
		<result column="mini_inventory" jdbcType="INTEGER" property="miniInventory" />
		<result column="cost_price" jdbcType="DOUBLE" property="costPrice" />
		<result column="commodity_num" jdbcType="INTEGER" property="commodityNum" />
		<association property="warehouse" javaType="com.jl.psi.model.Warehouse"
			resultMap="WarehouseResultMap" />
	</resultMap>
	
	<!-- 仓库信息 -->
	<resultMap id="WarehouseResultMap" type="com.jl.psi.model.Warehouse">
		<result column="wName" jdbcType="VARCHAR" property="name" />
	</resultMap>
	
	<sql id="Base_Column_List">
		id, classification_id, name, brand, zero_stock, shout_name,
		mnemonic_code, basics_information,
		attribute, identifier, supcto_id,taxes,temp_taxes,is_assemble,is_presell
	</sql>
	
	<!-- 根据主键查询信息 -->
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from commodity
		where id = #{id,jdbcType=INTEGER}
	</select>
	
	<!-- 根据名字查询信息 -->
	<select id="selectByName" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from commodity
		where 1=1
		<if test="name!=null and name!=''">
			AND name like '%${name}%'
		</if>
	</select>
	
	<!-- 根据主键删除 信息 -->
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		commodity
		where id = #{id,jdbcType=INTEGER}
	</delete>
	
	<!-- 保存全部信息 -->
	<insert id="insert" parameterType="com.jl.psi.model.Commodity">
		insert into commodity (id,
		classification_id, name,
		brand, zero_stock, shout_name,
		mnemonic_code,
		basics_information, attribute,
		identifier, supcto_id, taxes,temp_taxes,is_assemble,is_presell)
		values (#{id,jdbcType=INTEGER}, #{classificationId,jdbcType=INTEGER},
		#{name,jdbcType=VARCHAR},
		#{brand,jdbcType=VARCHAR},
		#{zeroStock,jdbcType=INTEGER}, #{shoutName,jdbcType=VARCHAR},
		#{mnemonicCode,jdbcType=VARCHAR},
		#{basicsInformation,jdbcType=VARCHAR}, #{attribute,jdbcType=VARCHAR},
		#{identifier,jdbcType=VARCHAR}, #{supctoId,jdbcType=INTEGER},
		#{taxes,jdbcType=DOUBLE},#{tempTaxes,jdbcType=DOUBLE}, #{isAssemble,jdbcType=INTEGER}, #{isPresell,jdbcType=INTEGER})
	</insert>
	
	<!-- 保存所选内容的信息 -->
	<insert id="insertSelective" parameterType="com.jl.psi.model.Commodity" useGeneratedKeys="true" keyProperty="id">
		insert into commodity
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="classificationId != null">
				classification_id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="brand != null">
				brand,
			</if>
			<if test="zeroStock != null">
				zero_stock,
			</if>
			<if test="shoutName != null">
				shout_name,
			</if>
			<if test="mnemonicCode != null">
				mnemonic_code,
			</if>
			<if test="basicsInformation != null">
				basics_information,
			</if>
			<if test="attribute != null">
				attribute,
			</if>
			<if test="identifier != null">
				identifier,
			</if>
			<if test="supctoId != null">
				supcto_id,
			</if>
			<if test="taxes != null">
				taxes,
			</if>
			<if test="tempTaxes != null">
				temp_taxes,
			</if>
			<if test="isAssemble != null">
				is_assemble,
			</if>
			<if test="isPresell != null">
				is_presell,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="classificationId != null">
				#{classificationId,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="brand != null">
				#{brand,jdbcType=VARCHAR},
			</if>
			<if test="zeroStock != null">
				#{zeroStock,jdbcType=INTEGER},
			</if>
			<if test="shoutName != null">
				#{shoutName,jdbcType=VARCHAR},
			</if>
			<if test="mnemonicCode != null">
				#{mnemonicCode,jdbcType=VARCHAR},
			</if>
			<if test="basicsInformation != null">
				#{basicsInformation,jdbcType=VARCHAR},
			</if>
			<if test="attribute != null">
				#{attribute,jdbcType=VARCHAR},
			</if>
			<if test="identifier != null">
				#{identifier,jdbcType=VARCHAR},
			</if>
			<if test="supctoId != null">
				#{supctoId,jdbcType=INTEGER},
			</if>
			<if test="taxes != null">
				#{taxes,jdbcType=DOUBLE},
			</if>
			<if test="tempTaxes != null">
				#{tempTaxes,jdbcType=DOUBLE},
			</if>
			<if test="isAssemble != null">
				#{isAssemble,jdbcType=INTEGER},
			</if>
			<if test="isPresell != null">
				#{isPresell,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	
	<!-- 根据主键更新所选内容 -->
	<update id="updateByPrimaryKeySelective" parameterType="com.jl.psi.model.Commodity">
		update commodity
		<set>
			<if test="classificationId != null">
				classification_id = #{classificationId,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="brand != null">
				brand = #{brand,jdbcType=VARCHAR},
			</if>
			<if test="zeroStock != null">
				zero_stock = #{zeroStock,jdbcType=INTEGER},
			</if>
			<if test="shoutName != null">
				shout_name = #{shoutName,jdbcType=VARCHAR},
			</if>
			<if test="mnemonicCode != null">
				mnemonic_code = #{mnemonicCode,jdbcType=VARCHAR},
			</if>
			<if test="basicsInformation != null">
				basics_information =
				#{basicsInformation,jdbcType=VARCHAR},
			</if>
			<if test="attribute != null">
				attribute = #{attribute,jdbcType=VARCHAR},
			</if>
			<if test="identifier != null">
				identifier = #{identifier,jdbcType=VARCHAR},
			</if>
			<if test="supctoId != null">
				supcto_id = #{supctoId,jdbcType=INTEGER},
			</if>
			<if test="taxes != null">
				taxes = #{taxes,jdbcType=DOUBLE},
			</if>
			<if test="tempTaxes != null">
				temp_taxes = #{tempTaxes,jdbcType=DOUBLE},
			</if>
			<if test="isAssemble != null">
				is_assemble = #{isAssemble,jdbcType=INTEGER},
			</if>
			<if test="isPresell != null">
				is_presell = #{isPresell,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	
	<!-- 根据主键更新全部内容 -->
	<update id="updateByPrimaryKey" parameterType="com.jl.psi.model.Commodity">
		update commodity
		set classification_id = #{classificationId,jdbcType=INTEGER},
		name =
		#{name,jdbcType=VARCHAR},
		brand = #{brand,jdbcType=VARCHAR},
		zero_stock
		= #{zeroStock,jdbcType=INTEGER},
		shout_name =
		#{shoutName,jdbcType=VARCHAR},
		mnemonic_code =
		#{mnemonicCode,jdbcType=VARCHAR},
		basics_information =
		#{basicsInformation,jdbcType=VARCHAR},
		attribute =
		#{attribute,jdbcType=VARCHAR},
		identifier =
		#{identifier,jdbcType=VARCHAR},
		supcto_id =
		#{supctoId,jdbcType=INTEGER},
		taxes =
		#{taxes,jdbcType=DOUBLE},
		temp_taxes =
		#{tempTaxes,jdbcType=DOUBLE},
		is_assemble =
		#{isAssemble,jdbcType=INTEGER},,
		is_presell =
		#{isPresell,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>
	
	
	<!-- 新增前判断该商品名是否存在 -->
	<select id="selectGoodsNamePreventRepeatAdd" resultMap="BaseResultMap">
		select * from commodity where name=#{name,jdbcType=VARCHAR}
	</select>

	<!-- 根据主键批量查询信息 -->
	<select id="selectBatchByPrimaryKey" resultMap="BaseResultMap">
		SELECT
			c.*,
			cs.id csId
		FROM
			commodity c
		LEFT JOIN commodity_specification cs ON cs.commodity_id = c.id
		where c.id in (
		<foreach collection="list" item="item" separator=",">
			#{item}
		</foreach>
		)
	</select>
	
	<!-- 根据商品名称获取商品信息 -->
	<select id="selectCommodityMsgByName" resultMap="BaseResultMap">
		SELECT
			c.*, s.id sId,
			s. NAME sName,
			cf.id cfId,
			cf.`name` cfName,
			cf.parent_id
		FROM
			commodity c
		LEFT JOIN supcto s ON s.id = c.supcto_id
		LEFT JOIN classification cf ON cf.id = c.classification_id
		WHERE
			c.`name` = #{name,jdbcType=VARCHAR}
	</select>
	
	<!-- 获取最大的商品编号 以供截取后四位 -->
	<select id="selectMaxIdentifier" resultType="java.lang.String">
		select identifier from commodity  where id =(select MAX(id) from commodity)
	</select>
	
	<!-- 根据主键批量删除 信息 -->
	<delete id="deleteBatchByPrimaryKey">
		delete from
		commodity
		where id in (
		<foreach collection="list" item="item" separator=",">
			#{item}
		</foreach>
		)
	</delete>
	
	
	<!--定义一个sql片段 -->
	<sql id="query_where">
		<if test="classificationId!=null and classificationId!=-1">
			AND c.classification_id = #{classificationId}
		</if>
		<if test="cname!=null and cname!=''">
			AND c.name like '%${cname}%'
		</if>
		<if test="operatorName!=null and operatorName!=''">
			AND u.name like '%${operatorName}%'
		</if>
		<if test="supctoId!=null and supctoId!=-1">
			AND c.supcto_id = #{supctoId}
		</if>
	</sql>
	
	<!-- 导出全部商品信息 -->
	<select id="exportCommodityMsg" resultMap="BaseResultMap">
		SELECT
			c.*, cs.id csId,
			cs.add_order_quantity,
			cs.commodity_id,
			cs.is_delete,
			cs.mini_order_quantity,
			cs.operator_identifier,
			cs.operator_time,
			cs.packaging_size,
			cs.quality_period,
			cs.quality_period_unit,
			cs.specification_identifier,
			cs.specification_name,
			cs.state,
			cs.warning_number,
			cs.weight,
			cf.id cfId,
			cf.parent_id,
			cf.`name` cfName,
			un.id uId,
			un. NAME unName,
			un.specification_id uSpecificationId,
			un.ratio_denominator,
			un.ratio_molecular,
			un.purchase_price,
			un.commonly_price,
			un.mini_price,
			un.bar_code,
			un.sales_unit,
			un.basic_unit,
			un.warehouse_unit,
			un.purchasing_unit,
			un.mini_purchasing,
			ity.*, s.`name` sName,
			u. NAME uname
		FROM
			commodity c
		LEFT JOIN commodity_specification cs ON cs.commodity_id = c.id
		LEFT JOIN supcto s ON s.id = c.supcto_id
		LEFT JOIN classification cf ON cf.id = c.classification_id
		LEFT JOIN unit un ON un.specification_id = cs.id
		LEFT JOIN person u ON u.identifier = cs.operator_identifier
		LEFT JOIN (
			SELECT
				it.id inId,
				it.specification_id inSpecificationId,
				it.warehouse_id,
				it.max_inventory,
				it.mini_inventory,
				it.commodity_num,
				w.`name` wName
			FROM
				inventory it
			LEFT JOIN warehouse w ON w.id = it.warehouse_id
		) ity ON ity.inSpecificationId = cs.id
		where 1=1
		<include refid="query_where"></include>
	</select>
	<select id="getAllCommodity" resultMap="BaseResultMap">
		SELECT
		id,name
		 FROM
		  commodity 
	</select>

	
</mapper>