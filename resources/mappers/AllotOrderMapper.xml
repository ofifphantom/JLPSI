<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jl.psi.mapper.AllotOrderMapper">
  <resultMap id="BaseResultMap" type="com.jl.psi.model.AllotOrder">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="allot_date" jdbcType="TIMESTAMP" property="allotDate" />
    <result column="aoIdentifier" jdbcType="VARCHAR" property="identifier" />
    <result column="export_warehouse_id" jdbcType="INTEGER" property="exportWarehouseId" />
    <result column="import_warehouse_id" jdbcType="INTEGER" property="importWarehouseId" />
    <result column="shipping_mode_id" jdbcType="INTEGER" property="shippingModeId" />
    <result column="import_branch" jdbcType="VARCHAR" property="importBranch" />
    <result column="adjust_subject" jdbcType="VARCHAR" property="adjustSubject" />
    <result column="send_goods_place" jdbcType="VARCHAR" property="sendGoodsPlace" />
    <result column="person_id" jdbcType="INTEGER" property="personId" />
    <result column="originator" jdbcType="VARCHAR" property="originator" />
    <result column="summary" jdbcType="VARCHAR" property="summary" />
    <result column="print_num" jdbcType="INTEGER" property="printNum" />
    <result column="exportName" jdbcType="VARCHAR" property="exportName" />
    <result column="importName" jdbcType="VARCHAR" property="importName" />
    <result column="makePerson" jdbcType="VARCHAR" property="makePerson" />
    <result column="importPlace" jdbcType="VARCHAR" property="importPlace" />
    <result column="exportPlace" jdbcType="VARCHAR" property="exportPlace" />
    <association property="shippingMode"  javaType="com.jl.psi.model.ShippingMode" resultMap="shippingModel" />
    <association property="unit"  javaType="com.jl.psi.model.Unit" resultMap="unitMapping" />
    <association property="person"  javaType="com.jl.psi.model.Person" resultMap="personMapping" />
    <association property="inventory" javaType="com.jl.psi.model.Inventory"
		resultMap="InventoryResultMap" />
    <collection property="allotOrderCommodities" ofType="com.jl.psi.model.AllotOrderCommodity"  resultMap="allotOrderCommodity" />
    
  </resultMap>
  <!-- 库存信息 -->
	<resultMap id="InventoryResultMap" type="com.jl.psi.model.Inventory">
		<id column="inId" jdbcType="INTEGER" property="id" />
		<result column="inSpecificationId" jdbcType="INTEGER" property="specificationId" />
		<result column="warehouse_id" jdbcType="INTEGER" property="warehouseId" />
		<result column="inventory" jdbcType="INTEGER" property="inventory" />
		<result column="presell_inventory" jdbcType="INTEGER" property="presellInventory" />
		<result column="occupied_inventory" jdbcType="INTEGER"
			property="occupiedInventory" />
		<result column="max_inventory" jdbcType="INTEGER" property="maxInventory" />
		<result column="mini_inventory" jdbcType="INTEGER" property="miniInventory" />
		<result column="cost_price" jdbcType="DOUBLE" property="costPrice" />
		<result column="commodity_num" jdbcType="INTEGER" property="commodityNum" />
		
	</resultMap>
  <!--业务员信息  -->
  <resultMap id="personMapping" type="com.jl.psi.model.Person">
		<result column="pName" jdbcType="VARCHAR" property="name" />
		<association property="department" javaType="com.jl.psi.model.Department"
			resultMap="DepartmentResultMap" />
  </resultMap>
  <!--部门信息  -->
  <resultMap id="DepartmentResultMap" type="com.jl.psi.model.Department">
		<result column="departmentName" jdbcType="VARCHAR" property="name" />
	</resultMap>
  <!--单位信息  -->
  <resultMap id="unitMapping" type="com.jl.psi.model.Unit">
		<result column="uName" jdbcType="VARCHAR" property="name" />
		<result column="mini_price" jdbcType="DOUBLE" property="miniPrice" />
  </resultMap>
  <!-- 商品规格信息 -->
  <resultMap id="CommoditySpecificationResultMap" type="com.jl.psi.model.CommoditySpecification">
		<result column="specification_identifier" jdbcType="VARCHAR"
			property="specificationIdentifier" />
		<result column="specification_name" jdbcType="VARCHAR"
			property="specificationName" />
		<result column="baseUnitName" jdbcType="VARCHAR" property="baseUnitName" />
		<result column="barCode" jdbcType="VARCHAR" property="barCode" />
		<association property="commodity" javaType="com.jl.psi.model.Commodity"
			resultMap="CommodityResultMap" />
		<collection property="units" ofType="com.jl.psi.model.Unit" resultMap="unitMapping"/>
  </resultMap>
  
  <!-- 商品信息 -->
  <resultMap id="CommodityResultMap" type="com.jl.psi.model.Commodity">
		<result column="cName" jdbcType="VARCHAR" property="name" />
		<result column="cIdentifier" jdbcType="VARCHAR" property="identifier" />
		<result column="brand" jdbcType="VARCHAR" property="brand" />
  </resultMap>
  <!--调拨单商品信息  -->
  <resultMap type="com.jl.psi.model.AllotOrderCommodity" id="allotOrderCommodity">
  		<id column="acId" jdbcType="INTEGER" property="id" />
	    <result column="allot_order_id" jdbcType="INTEGER" property="allotOrderId" />
	    <result column="commodity_specification_id" jdbcType="INTEGER" property="commoditySpecificationId" />
	    <result column="number" jdbcType="INTEGER" property="number" />
	    <result column="export_unit_price" jdbcType="DOUBLE" property="exportUnitPrice" />
	    <result column="import_unit_price" jdbcType="DOUBLE" property="importUnitPrice" />
	    <result column="import_money" jdbcType="DOUBLE" property="importMoney" />
	    <result column="commodity_specification_id" jdbcType="VARCHAR" property="commoditySpecificationId" />
	    
  		<association property="commoditySpecification"
			javaType="com.jl.psi.model.CommoditySpecification" resultMap="CommoditySpecificationResultMap" />
  </resultMap>
  <!--运输方式信息  -->
  <resultMap type="com.jl.psi.model.ShippingMode" id="shippingModel">
  		<id column="sId" jdbcType="INTEGER" property="id" />
	    <result column="sName" jdbcType="VARCHAR" property="name" />
 
  </resultMap>
  
  <sql id="Base_Column_List">
    id, allot_date , identifier aoIdentifier, export_warehouse_id, import_warehouse_id, shipping_mode_id, 
    import_branch, adjust_subject, send_goods_place, person_id, originator, summary, 
    print_num
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List"></include>
    from allot_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from allot_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jl.psi.model.AllotOrder">
    insert into allot_order (id, allot_date, identifier, 
      export_warehouse_id, import_warehouse_id, shipping_mode_id, 
      import_branch, adjust_subject, send_goods_place, 
      person_id, originator, summary, 
      print_num)
    values (#{id,jdbcType=INTEGER}, #{allotDate,jdbcType=TIMESTAMP}, #{identifier,jdbcType=VARCHAR}, 
      #{exportWarehouseId,jdbcType=INTEGER}, #{importWarehouseId,jdbcType=INTEGER}, #{shippingModeId,jdbcType=INTEGER}, 
      #{importBranch,jdbcType=VARCHAR}, #{adjustSubject,jdbcType=VARCHAR}, #{sendGoodsPlace,jdbcType=VARCHAR}, 
      #{personId,jdbcType=INTEGER}, #{originator,jdbcType=VARCHAR}, #{summary,jdbcType=VARCHAR}, 
      #{printNum,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.jl.psi.model.AllotOrder" useGeneratedKeys="true" keyProperty="id">
    insert into allot_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="allotDate != null">
        allot_date,
      </if>
      <if test="identifier != null">
        identifier,
      </if>
      <if test="exportWarehouseId != null">
        export_warehouse_id,
      </if>
      <if test="importWarehouseId != null">
        import_warehouse_id,
      </if>
      <if test="shippingModeId != null">
        shipping_mode_id,
      </if>
      <if test="importBranch != null">
        import_branch,
      </if>
      <if test="adjustSubject != null">
        adjust_subject,
      </if>
      <if test="sendGoodsPlace != null">
        send_goods_place,
      </if>
      <if test="personId != null">
        person_id,
      </if>
      <if test="originator != null">
        originator,
      </if>
      <if test="summary != null">
        summary,
      </if>
      <if test="printNum != null">
        print_num,
      </if>
      <if test="exportName != null">
        exportName,
      </if>
      <if test="importName != null">
        importName,
      </if>
      <if test="makePerson != null">
        makePerson,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="allotDate != null">
        #{allotDate,jdbcType=TIMESTAMP},
      </if>
      <if test="identifier != null">
        #{identifier,jdbcType=VARCHAR},
      </if>
      <if test="exportWarehouseId != null">
        #{exportWarehouseId,jdbcType=INTEGER},
      </if>
      <if test="importWarehouseId != null">
        #{importWarehouseId,jdbcType=INTEGER},
      </if>
      <if test="shippingModeId != null">
        #{shippingModeId,jdbcType=INTEGER},
      </if>
      <if test="importBranch != null">
        #{importBranch,jdbcType=VARCHAR},
      </if>
      <if test="adjustSubject != null">
        #{adjustSubject,jdbcType=VARCHAR},
      </if>
      <if test="sendGoodsPlace != null">
        #{sendGoodsPlace,jdbcType=VARCHAR},
      </if>
      <if test="personId != null">
        #{personId,jdbcType=INTEGER},
      </if>
      <if test="originator != null">
        #{originator,jdbcType=VARCHAR},
      </if>
      <if test="summary != null">
        #{summary,jdbcType=VARCHAR},
      </if>
      <if test="printNum != null">
        #{printNum,jdbcType=INTEGER},
      </if>
      <if test="exportName != null">
        #{exportName,jdbcType=VARCHAR},
      </if>
      <if test="importName != null">
        #{importName,jdbcType=VARCHAR},
      </if>
      <if test="makePerson != null">
        #{makePerson,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jl.psi.model.AllotOrder">
    update allot_order
    <set>
      <if test="allotDate != null">
        allot_date = #{allotDate,jdbcType=TIMESTAMP},
      </if>
      <if test="identifier != null">
        identifier = #{identifier,jdbcType=VARCHAR},
      </if>
      <if test="exportWarehouseId != null">
        export_warehouse_id = #{exportWarehouseId,jdbcType=INTEGER},
      </if>
      <if test="importWarehouseId != null">
        import_warehouse_id = #{importWarehouseId,jdbcType=INTEGER},
      </if>
      <if test="shippingModeId != null">
        shipping_mode_id = #{shippingModeId,jdbcType=INTEGER},
      </if>
      <if test="importBranch != null">
        import_branch = #{importBranch,jdbcType=VARCHAR},
      </if>
      <if test="adjustSubject != null">
        adjust_subject = #{adjustSubject,jdbcType=VARCHAR},
      </if>
      <if test="sendGoodsPlace != null">
        send_goods_place = #{sendGoodsPlace,jdbcType=VARCHAR},
      </if>
      <if test="personId != null">
        person_id = #{personId,jdbcType=INTEGER},
      </if>
      <if test="originator != null">
        originator = #{originator,jdbcType=VARCHAR},
      </if>
      <if test="summary != null">
        summary = #{summary,jdbcType=VARCHAR},
      </if>
      <if test="printNum != null">
        print_num = #{printNum,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jl.psi.model.AllotOrder">
    update allot_order
    set allot_date = #{allotDate,jdbcType=TIMESTAMP},
      identifier = #{identifier,jdbcType=VARCHAR},
      export_warehouse_id = #{exportWarehouseId,jdbcType=INTEGER},
      import_warehouse_id = #{importWarehouseId,jdbcType=INTEGER},
      shipping_mode_id = #{shippingModeId,jdbcType=INTEGER},
      import_branch = #{importBranch,jdbcType=VARCHAR},
      adjust_subject = #{adjustSubject,jdbcType=VARCHAR},
      send_goods_place = #{sendGoodsPlace,jdbcType=VARCHAR},
      person_id = #{personId,jdbcType=INTEGER},
      originator = #{originator,jdbcType=VARCHAR},
      summary = #{summary,jdbcType=VARCHAR},
      print_num = #{printNum,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!--定义一个sql片段-->
	<sql id="query_where">
	 	

		<if test="originator!=null and originator!=''">
			AND ao.originator like '%${originator}%'
		</if>
		<if test="type==-1">
			AND (ao.export_warehouse_id = #{warehouseId} or ao.import_warehouse_id = #{warehouseId})
		</if>
		<if test="type==1">
			AND ao.import_warehouse_id = #{warehouseId}
		</if>
		<if test="type==2">
			AND ao.export_warehouse_id = #{warehouseId}
		</if>
        <!--时间  -->
        <if test="beginTime!=null and beginTime!=''">
            AND
            ao.allot_date
            BETWEEN
            '${beginTime}'
            AND
            DATE_ADD('${closeTime}',INTERVAL 1 DAY)
        </if>
	</sql>
  <select id="selectForSearch"   resultMap="BaseResultMap">
  		select
		ao.id,
		ao.identifier aoIdentifier,
		ao.allot_date,
		(SELECT name FROM warehouse WHERE warehouse.id=ao.export_warehouse_id) exportName,
		(SELECT name FROM warehouse WHERE warehouse.id=ao.import_warehouse_id) importName,
		sm.`name` sName,
		ao.summary,
		ao.originator,
		ao.print_num,
		p.`name` pName
		from
		allot_order ao
		
		LEFT JOIN
		shipping_mode sm
		ON
		ao.shipping_mode_id=sm.id
		LEFT JOIN person p ON p.identifier=ao.originator
  		where 1=1
  		<include refid="query_where"></include>
  		ORDER BY  ao.id desc
  </select>
  <!-- 搜索结果总行数 -->
  <select id="iTotalDisplayRecords"  resultType="java.lang.Integer">
  		select
		count(1)
		from
		allot_order ao
		
		LEFT JOIN
		shipping_mode sm
		ON
		ao.shipping_mode_id=sm.id
		where 1=1
  		<include refid="query_where"></include>
  		
  </select>
  <!-- 所有记录数 -->
  <select id="iTotalRecords"  resultType="java.lang.Integer">
  		select
		count(1)
		from
		allot_order ao
		
		LEFT JOIN
		shipping_mode sm
		ON
		ao.shipping_mode_id=sm.id
		where 1=1
  		<include refid="query_where"></include>
  		
  </select>
  <select id="getAllocationOrderMsgById"  resultMap="BaseResultMap">
  		
  		SELECT
  		ao.id,
		ao.identifier  aoIdentifier,
		ao.allot_date,
		ao.import_branch,
		ao.adjust_subject,
		ao.send_goods_place,
		ao.export_warehouse_id,
		ao.import_warehouse_id,
		cs.specification_identifier,
		cs.specification_name,
		ao.makePerson,
		u.bar_code barCode,
		(SELECT warehouse.position FROM warehouse WHERE warehouse.id = export_warehouse_id) exportPlace,
		(SELECT warehouse.position FROM warehouse WHERE warehouse.id = import_warehouse_id) importPlace,
		(SELECT shipping_mode.`name` from  shipping_mode WHERE shipping_mode.id=shipping_mode_id) sName,
		(SELECT  warehouse.`name` FROM  warehouse WHERE  warehouse.id=export_warehouse_id) exportName,
		(SELECT  warehouse.`name` FROM  warehouse WHERE  warehouse.id=import_warehouse_id) importName,
		c.`name` cName,
		c.brand,
		cs.packaging_size,
		u.`name` uName,
		aoc.number,
		aoc.import_unit_price,
		aoc.export_unit_price,
		aoc.import_money,
		aoc.commodity_specification_id,
		ao.summary,
		
		p.`name` pName,
		d.`name` departmentName,
		ao.originator
		FROM
		allot_order_commodity aoc
		LEFT JOIN
		allot_order ao
		ON
		aoc.allot_order_id=ao.id
		LEFT JOIN
		commodity_specification cs
		ON
		aoc.commodity_specification_id=cs.id
		LEFT JOIN
		commodity c
		ON
		c.id=cs.commodity_id
		LEFT JOIN
		unit u
		ON
		u.specification_id=cs.id
		LEFT JOIN
		person p
		ON
		p.id=ao.person_id
		LEFT JOIN
		department d
		ON
		d.id=p.department_id
		WHERE ao.id=#{allocationId}
  		GROUP BY cs.id
  </select>
  
  <!-- 获取最大的编号 -->
	<select id="selectMaxIdentifier" resultType="java.lang.String">
		select MAX(identifier) from allot_order
	</select>
	
	<insert id="insertBeatch" parameterType="com.jl.psi.model.AllotOrderCommodity" useGeneratedKeys="true" keyProperty="id">
    insert into allot_order_commodity (
    	allot_order_id, 
    	commodity_specification_id,
    	number, 
    	export_unit_price, 
    	import_unit_price, 
   		import_money
      )
    values <foreach collection="list" index="index" item="aoc" separator=",">
	 ( #{aoc.allotOrderId,jdbcType=INTEGER}, 
	   #{aoc.commoditySpecificationId,jdbcType=INTEGER}, 
       #{aoc.number,jdbcType=INTEGER},
       #{aoc.exportUnitPrice,jdbcType=DOUBLE}, 
       #{aoc.importUnitPrice,jdbcType=DOUBLE}, 
       #{aoc.importMoney,jdbcType=DOUBLE}
      )
      </foreach>
  </insert>
  <update id="updateInventory"  >
  		UPDATE
		inventory
		SET
		warehouse_id=#{importWarehouseId}
		WHERE
		specification_id=#{specificationId}
	  		
	  </update>
	  
	<!--基础查询条件  -->
	<sql id="query_where_base">
	  	<!--单号  -->
		<if test="identifier!=null and identifier!=''">
			AND ao.identifier like '%${identifier}%'
		</if>
		<!--运输方式  -->
		<if test="shippingModel!=null and shippingModel!='' and shippingModel!=-1">
			AND ao.shipping_mode_id='${shippingModel}'
		</if>
		
		<!--商品名称  -->
		<if test="cname!=null and cname!=''">
			AND c.name like '%${cname}%'
		</if>
		<!-- 商品编码 -->
		<if test="commodity_identifier!=null and commodity_identifier!=''">
			AND c.identifier like '%${commodity_identifier}%'
		</if>
		<!--品牌  -->
		<if test="brand!=null and brand!=''">
			AND c.brand like '%${brand}%'
		</if>
		<!--开单部门  -->
		<if test="departmentClassOneId!=null and departmentClassOneId!='' and departmentClassOneId!='-1'">
			AND dk.id='${departmentClassOneId}'
		</if>
		<!--开单人  -->
		<if test="makeOrderPersonId!=null and makeOrderPersonId!='' and makeOrderPersonId!='-1'">
			AND ao.originator='${makeIdentifier}'
		</if>
		<!--审核部门  -->
		<if test="checkDepartmentId!=null and checkDepartmentId!='' and checkDepartmentId!='-1'">
			
		</if>
		<!--审核人  -->
		<if test="checkPersonId!=null and checkPersonId!='' and checkPersonId!=-1">
			
		</if>
		<!--时间  -->
		<if test="beginTime!=null and beginTime!=''">
			AND
			ao.allot_date
			BETWEEN
			'${beginTime}'
			AND
			DATE_ADD('${closeTime}',INTERVAL 1 DAY)
		</if>
		
		<!--仓库  -->
		<if test="warehouseMsgId!=null and warehouseMsgId!='' and warehouseMsgId!=-1">
			AND ao.import_warehouse_id='${warehouseMsgId}'
		</if>
		
		
		
	</sql>
	  <select id="reportMsg"  resultMap="BaseResultMap">
	  SELECT
	  	ao.id,
		aoc.commodity_specification_id,
		i.occupied_inventory,
		(SELECT name FROM warehouse WHERE warehouse.id=ao.export_warehouse_id) exportName,
		ao.allot_date,
		ao.identifier aoIdentifier,
		c.identifier cIdentifier,
		c.`name` cName,
		u.`name` uName,
		cs.specification_name,
		cs.specification_identifier,
		u.mini_price,
		aoc.number,
		(SELECT name FROM warehouse WHERE warehouse.id=ao.import_warehouse_id) importName,
		ao.originator,
		aoc.import_money,
		aoc.import_unit_price
		
		FROM
		allot_order ao
		LEFT JOIN allot_order_commodity aoc ON ao.id = aoc.allot_order_id
		LEFT JOIN commodity_specification cs ON aoc.commodity_specification_id = cs.id
		LEFT JOIN unit u ON u.specification_id = cs.id
		LEFT JOIN commodity c ON c.id = cs.commodity_id 
		LEFT JOIN inventory i ON i.specification_id = cs.id
		LEFT JOIN warehouse w ON w.id = i.warehouse_id 
		LEFT JOIN person k ON k.identifier=ao.originator
		
		LEFT JOIN department dk ON dk.id=k.department_id
		
		LEFT JOIN supcto s ON c.supcto_id=s.id
		LEFT JOIN classification cla ON s.classification_id=cla.id
		where 1=1
		<include refid="query_where_base" />
		GROUP BY
		aoc.id
		ORDER BY
	 ao.id desc
	  </select>
	  
	  <!-- 执行商品调拨的时候，修改销售表里相关的仓库信息 -->
	  <update id="updateSaleOrderCommodityWarehouseId">
	  		UPDATE
	  		 sales_order_commodity SET warehouse_id=${importId}    
	  		 WHERE 
	  		 commodity_specification_id=${csId} AND warehouse_id=${exportId}
	  
	  </update>
	</mapper>