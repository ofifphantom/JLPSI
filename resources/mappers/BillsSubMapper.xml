<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jl.psi.mapper.BillsSubMapper">
  <resultMap id="BaseResultMap" type="com.jl.psi.model.BillsSub">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="bills_id" jdbcType="INTEGER" property="billsId" />
    <result column="procure_sales_id" jdbcType="INTEGER" property="procureSalesId" />
    <result column="clearing_money" jdbcType="DOUBLE" property="clearingMoney" />
    <result column="stay_money" jdbcType="DOUBLE" property="stayMoney" />
    <result column="the_moeny" jdbcType="DOUBLE" property="theMoeny" />
    <result column="actual_money" jdbcType="DOUBLE" property="actualMoney" />
    <result column="rebate_money" jdbcType="DOUBLE" property="rebateMoney" />
    <result column="is_payment" jdbcType="INTEGER" property="isPayment" />
    <result column="rebate" jdbcType="INTEGER" property="rebate" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
   	<result column="identifier" jdbcType="VARCHAR" property="identifier" />
    <result column="order_time" jdbcType="TIMESTAMP" property="orderTime" />
     <result column="order_money" jdbcType="DOUBLE" property="orderMoney" />
 	<result column="payMoney" jdbcType="DOUBLE" property="payMoney" />
 
  </resultMap>

 
 
  <sql id="Base_Column_List">
    id, bills_code, customer_supplier_id, bills_type, bills_date, bank,bank_account,payment,person_id,summary,remark,money,ticket_no
  </sql>
  

 	<!-- 批量添加 -->
	<insert id="insertBatch" parameterType="java.util.List"
		useGeneratedKeys="true" keyProperty="id">
		insert into bills_sub (
  bills_id,procure_sales_id,clearing_money,stay_money,the_moeny,actual_money,rebate_money,is_payment,rebate,remark
		)
		values
		<foreach collection="list" item="sb" separator=",">
			(
			#{sb.billsId,jdbcType=INTEGER},
			#{sb.procureSalesId,jdbcType=INTEGER},
			#{sb.clearingMoney,jdbcType=DOUBLE}, 
			#{sb.stayMoney,jdbcType=DOUBLE}, 
			#{sb.theMoeny,jdbcType=DOUBLE}, 
			#{sb.actualMoney,jdbcType=DOUBLE}, 
 			#{sb.rebateMoney,jdbcType=DOUBLE}, 
 			#{sb.isPayment,jdbcType=INTEGER},
 			#{sb.rebate,jdbcType=INTEGER},
 			#{sb.remark,jdbcType=VARCHAR}
 			
			)
		</foreach>
	</insert>
	<!-- 待添加收款单  1-->
	 		<select id="selectByOne"  
		resultMap="BaseResultMap">
	 SELECT DISTINCT
	so.id AS procure_sales_id,
	so.create_time as order_time,
 	so.identifier,
 
 	(
		SELECT
 			SUM(sc.receiving_goods_money)
 		FROM
 			sales_order_commodity sc
 		WHERE
 			sc.sales_order_id = so.id
 	) AS order_money,
 	IFNULL((
		SELECT
			SUM(bsub.the_moeny)
		FROM
			bills_sub bsub
		INNER JOIN bills bi ON bi.id = bsub.bills_id
		WHERE
			bi.bills_type = 1
		AND bsub.procure_sales_id = so.id
	),0)+
	IFNULL((
		SELECT
			SUM(wsub.the_money)
		FROM
			writeoff_sub wsub
		INNER JOIN writeoff wo ON wo.id = wsub.writeoff_id
		WHERE
		 wo.type=1
		AND wsub.procure_sales_id = so.id
	),0)

 AS clearing_money
FROM
	sales_order so  
WHERE
	so.order_type = 2  and so.state=15
 
AND so.supcto_id = #{supctoId}
ORDER BY so.create_time asc 
	</select>
		<!-- 待添加付款单  2-->
		<select id="selectByTwo"  
		resultMap="BaseResultMap">
SELECT
	pt.id AS procure_sales_id,
	pt.generate_date AS order_time,
	pt.identifier,
	(
		SELECT
			SUM(pc.arrival_quantity*pc.business_unit_price*(1+pc.tax_rate))
		FROM
			procure_commodity pc
		WHERE
			pc.procure_table_id = pt.id
	) AS order_money,
IFNULL((
		SELECT
			SUM(the_moeny)
		FROM
			bills_sub sub
		INNER JOIN bills bi ON bi.id = sub.bills_id
		WHERE
			bi.bills_type = 2
		AND sub.procure_sales_id = pt.id
	),0)
+
	IFNULL((
		SELECT
			SUM(wsub.the_money)
		FROM
			writeoff_sub wsub
		INNER JOIN writeoff wo ON wo.id = wsub.writeoff_id
		WHERE
		 wo.type=2
		AND wsub.procure_sales_id = pt.id
	),0)
 AS clearing_money
FROM
	procure_table pt
WHERE
   pt.state = 13 and pt.plan_or_order=4
AND pt.supcto_id=#{supctoId}
ORDER BY  pt.generate_date asc 
	</select>
	
	<!-- 待添加 预收款单 3 -->
 		<select id="selectByThree"  
		resultMap="BaseResultMap">
	 SELECT DISTINCT
	so.id AS procure_sales_id,
	so.create_time as order_time,
 	so.identifier,
 
 	(
		SELECT
 			SUM(sc.receiving_goods_money)
 		FROM
 			sales_order_commodity sc
 		WHERE
 			sc.sales_order_id = so.id
 	) AS order_money,
 	(
		SELECT
			SUM(the_moeny)
		FROM
 			bills_sub sub
 		INNER JOIN bills bi ON bi.id = sub.bills_id
 		WHERE
			bi.bills_type =3
 		AND sub.procure_sales_id = so.id
 	) AS clearing_money
FROM
	sales_order so 
WHERE
	so.order_type = 2  and so.state=15
 
AND so.supcto_id = #{supctoId}
ORDER BY so.create_time asc 
	</select>
	<!-- 待添加 预收款单 4 -->
	 <select id="selectByFour"  
		resultMap="BaseResultMap">
SELECT
	pt.id AS procure_sales_id,
	pt.generate_date AS order_time,
	pt.identifier,
	(
		SELECT
			SUM(pc.arrival_quantity*pc.business_unit_price*(1+pc.tax_rate))
		FROM
			procure_commodity pc
		WHERE
			pc.procure_table_id = pt.id
	) AS order_money,
	(
		SELECT
			SUM(the_moeny)
		FROM
			bills_sub sub
		INNER JOIN bills bi ON bi.id = sub.bills_id
		WHERE
			bi.bills_type = 4
		AND sub.procure_sales_id = pt.id
	) AS clearing_money
FROM
	procure_table pt
WHERE
 pt.state = 13 and pt.plan_or_order=4
AND pt.supcto_id=#{supctoId}
ORDER BY  pt.generate_date asc 
	</select> 	
 
	 		<select id="selectSalesByBillsId"  
		resultMap="BaseResultMap">
 SELECT
	b.*,
	so.create_time AS order_time,
	so.identifier,

 
	(
		SELECT
			SUM(sc.receiving_goods_money)
		FROM
			sales_order_commodity sc
		WHERE
			sc.sales_order_id = so.id
	) AS order_money
FROM
 bills_sub b
INNER JOIN	sales_order so on so.id=b.procure_sales_id
WHERE
	so.order_type = 2  and so.state=15
AND b.bills_id = #{billsId}
	</select>
	
 <select id="selectProcureByBillsId"  
		resultMap="BaseResultMap">
 
  SELECT
	b.*,
	pt.generate_date AS order_time,
	pt.identifier,
	(
		SELECT
			SUM(pc.arrival_quantity*pc.business_unit_price*(1+pc.tax_rate))
		FROM
			procure_commodity pc
		WHERE
			pc.procure_table_id = pt.id
	) AS order_money
FROM
 bills_sub b
INNER JOIN	procure_table pt on pt.id=b.procure_sales_id
WHERE
pt.state = 13 and pt.plan_or_order=4
AND b.bills_id = #{billsId} 
 	</select>
 	<!-- 销售退货单待添加 -->
 	  <select id="selectReturnSales"  
		resultMap="BaseResultMap">
SELECT DISTINCT
	so.id AS procure_sales_id,
	so.create_time AS order_time,
	so.identifier,
	(
		SELECT
			SUM(sc.return_goods_num*sc.unit_price)
		FROM
			sales_order_commodity sc
		WHERE
			sc.sales_order_id = so.id
	) AS order_money,
IFNULL((
		SELECT
			SUM(bsub.the_moeny)
		FROM
			bills_sub bsub
		INNER JOIN bills bi ON bi.id = bsub.bills_id
		WHERE
			bi.bills_type = 1
		AND bsub.procure_sales_id = so.id
	),0)+
	IFNULL((
		SELECT
			SUM(wsub.the_money)
		FROM
			writeoff_sub wsub
		INNER JOIN writeoff wo ON wo.id = wsub.writeoff_id
		WHERE
		 wo.type=1
		AND wsub.procure_sales_id = so.id
	),0)

 AS clearing_money
FROM
	sales_order so
WHERE
 so.state = 31
AND so.supcto_id = #{supctoId}
ORDER BY
	so.create_time ASC
	</select>
	 	<!-- 销售退货单详情 -->
 	  <select id="selectReturnSalesByBillsId"  
		resultMap="BaseResultMap">
 SELECT
	b.*,
	so.create_time AS order_time,
	so.identifier,
	(
		SELECT
			SUM(sc.return_goods_num*sc.unit_price)
		FROM
			sales_order_commodity sc
		WHERE
			sc.sales_order_id = so.id
	) AS order_money
FROM
 bills_sub b
INNER JOIN	sales_order so on so.id=b.procure_sales_id
WHERE
	so.state = 31
AND b.bills_id = #{billsId}
	</select>
		<!-- 销售退货单待添加 -->
 	  <select id="selectReturnProcure"  
		resultMap="BaseResultMap">
SELECT
	pt.id AS procure_sales_id,
	pt.generate_date AS order_time,
	pt.identifier,
	(
		SELECT
			SUM(pc.arrival_quantity*pc.business_unit_price)
		FROM
			procure_commodity pc
		WHERE
			pc.procure_table_id = pt.id
	) AS order_money,
IFNULL((
		SELECT
			SUM(the_moeny)
		FROM
			bills_sub sub
		INNER JOIN bills bi ON bi.id = sub.bills_id
		WHERE
			bi.bills_type = 2
		AND sub.procure_sales_id = pt.id
	),0)
+
	IFNULL((
		SELECT
			SUM(wsub.the_money)
		FROM
			writeoff_sub wsub
		INNER JOIN writeoff wo ON wo.id = wsub.writeoff_id
		WHERE
		 wo.type=2
		AND wsub.procure_sales_id = pt.id
	),0)
 AS clearing_money
FROM
	procure_table pt
WHERE
   pt.state = 14 and pt.plan_or_order=5
AND pt.supcto_id=#{supctoId}
ORDER BY  pt.generate_date asc 
	</select>
	 	<!-- 销售退货单详情 -->
 	  <select id="selectReturnProcureByBillsId"  
		resultMap="BaseResultMap">
	   SELECT
		b.*,
		pt.generate_date AS order_time,
		pt.identifier,
		(
		SELECT
			SUM(pc.arrival_quantity*pc.business_unit_price)
		FROM
			procure_commodity pc
		WHERE
			pc.procure_table_id = pt.id
	) AS order_money
	FROM
	 bills_sub b
	INNER JOIN	procure_table pt on pt.id=b.procure_sales_id
	WHERE
	 pt.state = 14 and pt.plan_or_order=5
	AND b.bills_id = #{billsId}
	</select>
	
 	<select id="reportActualMoneyMsg" resultMap="BaseResultMap">
			SELECT
		bs.procure_sales_id,
		bs.actual_money
	FROM
		bills b
		INNER JOIN bills_sub bs ON b.id=bs.bills_id
		
	WHERE
		b.bills_type =#{billsType}
		
	GROUP BY
	 bs.id
	</select>
</mapper>