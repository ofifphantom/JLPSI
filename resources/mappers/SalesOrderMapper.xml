<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jl.psi.mapper.SalesOrderMapper">
	<resultMap id="BaseResultMap" type="com.jl.psi.model.SalesOrder">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="missOrderId" jdbcType="INTEGER" property="missOrderId" />
		<result column="parent_id" jdbcType="INTEGER" property="parentId" />
		<result column="identifier" jdbcType="VARCHAR" property="identifier" />
		<result column="break_code" jdbcType="VARCHAR" property="breakCode" />
		<result column="payment" jdbcType="INTEGER" property="payment" />
		<result column="order_type" jdbcType="INTEGER" property="orderType" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="end_validity_time" jdbcType="DATE" property="endValidityTime" />
		<result column="deliver_goods_place" jdbcType="VARCHAR"
			property="deliverGoodsPlace" />
		<result column="receipt_goods_place" jdbcType="VARCHAR"
			property="receiptGoodsPlace" />
		<result column="consignee" jdbcType="VARCHAR" property="consignee" />
		<result column="phone" jdbcType="VARCHAR" property="phone" />
		<result column="fax" jdbcType="VARCHAR" property="fax" />
		<result column="orderer" jdbcType="VARCHAR" property="orderer" />
		<result column="advance_scale" jdbcType="DOUBLE" property="advanceScale" />
		<result column="originator" jdbcType="VARCHAR" property="originator" />
		<result column="summary" jdbcType="VARCHAR" property="summary" />
		<result column="branch" jdbcType="VARCHAR" property="branch" />
		<result column="state" jdbcType="INTEGER" property="state" />
		<result column="is_specimen" jdbcType="INTEGER" property="isSpecimen" />
		<result column="supcto_id" jdbcType="INTEGER" property="supctoId" />
		<result column="shipping_mode_id" jdbcType="INTEGER" property="shippingModeId" />
		<result column="person_id" jdbcType="INTEGER" property="personId" />
		<result column="sales_plan_order_id" jdbcType="INTEGER"
			property="salesPlanOrderId" />
		<result column="print_num" jdbcType="INTEGER" property="printNum" />
		<result column="is_show" jdbcType="INTEGER" property="isShow" />
		<result column="miss_order_id" jdbcType="INTEGER" property="missOrderId" />
		<result column="is_app_order" jdbcType="INTEGER" property="isAppOrder" />
		<result column="is_return_goods" jdbcType="INTEGER" property="isReturnGoods" />
		<result column="app_order_identifier" jdbcType="VARCHAR" property="appOrderIdentifier" />
		<result column="app_send_time" jdbcType="TIMESTAMP" property="appSendTime" />
		<result column="is_create_stock_order" jdbcType="INTEGER" property="isCreateStockOrder" />
		
		<result column="originatorName" jdbcType="VARCHAR" property="originatorName" />
		<result column="personName" jdbcType="VARCHAR" property="personName" />

		<result column="reviewerName" jdbcType="VARCHAR" property="reviewerName" />
		<result column="revokeLeaderName" jdbcType="VARCHAR" property="revokeLeaderName" />
		<result column="revokeWarehouseName" jdbcType="VARCHAR"
			property="revokeWarehouseName" />
		<result column="salesOpeningName" jdbcType="VARCHAR" property="salesOpeningName" />
		<result column="revisionsalesOpeningName" jdbcType="VARCHAR"
			property="revisionsalesOpeningName" />
		<result column="foldLossName" jdbcType="VARCHAR" property="foldLossName" />

		<result column="reviewerIdentifier" jdbcType="VARCHAR"
			property="reviewerIdentifier" />
		<result column="revokeLeaderIdentifier" jdbcType="VARCHAR"
			property="revokeLeaderIdentifier" />
		<result column="revokeWarehouseIdentifier" jdbcType="VARCHAR"
			property="revokeWarehouseIdentifier" />
		<result column="salesOpeningIdentifier" jdbcType="VARCHAR"
			property="salesOpeningIdentifier" />
		<result column="revisionsalesOpeningIdentifier" jdbcType="VARCHAR"
			property="revisionsalesOpeningIdentifier" />
		<result column="foldLossIdentifier" jdbcType="VARCHAR"
			property="foldLossIdentifier" />

		<result column="personDepartmentName" jdbcType="VARCHAR"
			property="personDepartmentName" />
		<result column="personDepartmentId" jdbcType="INTEGER"
			property="personDepartmentId" />

		<result column="parentIdentifier" jdbcType="INTEGER"
			property="parentIdentifier" />
		<result column="returnNum" jdbcType="INTEGER"
			property="returnGoodsNum" />
		<result column="damageNum" jdbcType="INTEGER"
		property="damageGoodsNum" />
		<result column="returnMoney" jdbcType="DOUBLE"
		property="returnMoney" />
		<association property="person" javaType="com.jl.psi.model.Person"
			resultMap="PersonResultMap" />
		<association property="supcto" javaType="com.jl.psi.model.Supcto"
			resultMap="SupctoResultMap" />
		<association property="shippingMode" javaType="com.jl.psi.model.ShippingMode"
			resultMap="ShippingModeResultMap" />
		<association property="inventory" javaType="com.jl.psi.model.Inventory"
		resultMap="InventoryResultMap" />
		<collection property="salesOrderCommodities" ofType="com.jl.psi.model.SalesOrderCommodity"
			resultMap="SalesOrderCommodityResultMap" />
	</resultMap>
	<!-- 库存信息 -->
	<resultMap id="InventoryResultMap" type="com.jl.psi.model.Inventory">
		
		
		<result column="inventory" jdbcType="INTEGER" property="inventory" />
		
		<result column="occupied_inventory" jdbcType="INTEGER"
			property="occupiedInventory" />
		
	</resultMap>
	<!-- 销售订单商品信息 -->
	<resultMap id="SalesOrderCommodityResultMap" type="com.jl.psi.model.SalesOrderCommodity">
		<id column="socId" jdbcType="INTEGER" property="id" />
		<result column="sales_order_id" jdbcType="INTEGER" property="salesOrderId" />
		<result column="commodity_specification_id" jdbcType="INTEGER"
			property="commoditySpecificationId" />
		<result column="deliver_goods_money" jdbcType="DOUBLE"
			property="deliverGoodsMoney" />
		<result column="deliver_goods_num" jdbcType="INTEGER" property="deliverGoodsNum" />
		<result column="return_goods_num" jdbcType="INTEGER" property="returnGoodsNum" />
		<result column="receiving_goods_money" jdbcType="DOUBLE"
			property="receivingGoodsMoney" />
		<result column="receiving_goods_num" jdbcType="INTEGER"
			property="receivingGoodsNum" />
		<result column="damage_num" jdbcType="INTEGER" property="damageNum" />
		<result column="damage_money" jdbcType="DOUBLE" property="damageMoney" />
		<result column="discount" jdbcType="DOUBLE" property="discount" />
		<result column="unit_price" jdbcType="DOUBLE" property="unitPrice" />
		<result column="taxes_money" jdbcType="DOUBLE" property="taxesMoney" />
		<result column="taxes" jdbcType="DOUBLE" property="taxes" />
		<result column="batch_number" jdbcType="VARCHAR" property="batchNumber" />
		<result column="remark" jdbcType="VARCHAR" property="remark" />
		<result column="is_special_offer" jdbcType="INTEGER" property="isSpecialOffer" />
		<result column="warehouse_id" jdbcType="INTEGER" property="warehouseId" />
		<result column="oldUnitPrice" jdbcType="DOUBLE" property="oldUnitPrice" />
		 <result column="app_amountMoney" jdbcType="DOUBLE" property="appAmountMoney" />
		<association property="commoditySpecification"
			javaType="com.jl.psi.model.CommoditySpecification" resultMap="CommoditySpecificationResultMap" />
		<association property="warehouse"
			javaType="com.jl.psi.model.Warehouse" resultMap="WarehouseResultMap" />
	</resultMap>
	<!-- 商品规格信息 -->
	<resultMap id="CommoditySpecificationResultMap" type="com.jl.psi.model.CommoditySpecification">
		<id column="csId" jdbcType="INTEGER" property="id" />
		<result column="specification_identifier" jdbcType="VARCHAR"
			property="specificationIdentifier" />
		<result column="specification_name" jdbcType="VARCHAR"
			property="specificationName" />
		<result column="commodity_id" jdbcType="INTEGER" property="commodityId" />
		<result column="quality_period" jdbcType="INTEGER" property="qualityPeriod" />
		<result column="quality_period_unit" jdbcType="VARCHAR"
			property="qualityPeriodUnit" />
		<result column="mini_order_quantity" jdbcType="INTEGER"
			property="miniOrderQuantity" />
		<result column="add_order_quantity" jdbcType="INTEGER"
			property="addOrderQuantity" />
		<result column="packaging_size" jdbcType="VARCHAR" property="packagingSize" />
		<result column="is_delete" jdbcType="INTEGER" property="isDelete" />
		<result column="warning_number" jdbcType="INTEGER" property="warningNumber" />
		<result column="weight" jdbcType="DOUBLE" property="weight" />
		<result column="operator_identifier" jdbcType="VARCHAR"
			property="operatorIdentifier" />
		<result column="operator_time" jdbcType="TIMESTAMP" property="operatorTime" />
		<result column="state" jdbcType="INTEGER" property="state" />
		<result column="baseUnitName" jdbcType="VARCHAR" property="baseUnitName" />
		<result column="goodsBarCode" jdbcType="VARCHAR" property="goodsBarCode" />
		<result column="baseCommonlyPrice" jdbcType="DOUBLE" property="baseCommonlyPrice" />
		<association property="commodity" javaType="com.jl.psi.model.Commodity"
			resultMap="CommodityResultMap" />
		<collection property="units" ofType="com.jl.psi.model.Unit" resultMap="UnitResultMap"/>
	</resultMap>
<!-- 单位信息 -->
	<resultMap id="UnitResultMap" type="com.jl.psi.model.Unit">
		<id column="uId" jdbcType="INTEGER" property="id" />
		<result column="unName" jdbcType="VARCHAR" property="name" />
		<result column="uSpecificationId" jdbcType="INTEGER" property="specificationId" />
		<result column="ratio_denominator" jdbcType="INTEGER" property="ratioDenominator" />
		<result column="ratio_molecular" jdbcType="INTEGER" property="ratioMolecular" />
		<result column="purchase_price" jdbcType="DOUBLE" property="purchasePrice" />
		<result column="commonly_price" jdbcType="DOUBLE" property="commonlyPrice" />
		<result column="mini_price" jdbcType="DOUBLE" property="miniPrice" />
		<result column="bar_code" jdbcType="VARCHAR" property="barCode" />
		<result column="sales_unit" jdbcType="VARCHAR" property="salesUnit" />
		<result column="basic_unit" jdbcType="INTEGER" property="basicUnit" />
		<result column="warehouse_unit" jdbcType="VARCHAR" property="warehouseUnit" />
		<result column="purchasing_unit" jdbcType="VARCHAR" property="purchasingUnit" />
		<result column="mini_purchasing" jdbcType="INTEGER" property="miniPurchasing" />
	</resultMap>
	<!-- 商品信息 -->
	<resultMap id="CommodityResultMap" type="com.jl.psi.model.Commodity">
		<id column="cId" jdbcType="INTEGER" property="id" />
		<result column="classification_id" jdbcType="INTEGER" property="classificationId" />
		<result column="cName" jdbcType="VARCHAR" property="name" />
		<result column="brand" jdbcType="VARCHAR" property="brand" />
		<result column="zero_stock" jdbcType="INTEGER" property="zeroStock" />
		<result column="shout_name" jdbcType="VARCHAR" property="shoutName" />
		<result column="mnemonic_code" jdbcType="VARCHAR" property="mnemonicCode" />
		<result column="basics_information" jdbcType="VARCHAR"
			property="basicsInformation" />
		<result column="attribute" jdbcType="VARCHAR" property="attribute" />
		<result column="cIdentifier" jdbcType="VARCHAR" property="identifier" />
		<result column="supcto_id" jdbcType="INTEGER" property="supctoId" />
		<result column="taxes" jdbcType="DOUBLE" property="taxes" />
		<association property="supcto" javaType="com.jl.psi.model.Supcto"
			resultMap="SupctoResultMap" />
	</resultMap>

	<!-- 用户信息 -->
	<resultMap id="PersonResultMap" type="com.jl.psi.model.Person">
		<result column="uname" jdbcType="VARCHAR" property="name" />
		<result column="uIdentifier" jdbcType="VARCHAR" property="identifier" />
	</resultMap>

	<!-- 客户信息 -->
	<resultMap id="SupctoResultMap" type="com.jl.psi.model.Supcto">
		<id column="sId" jdbcType="INTEGER" property="id" />
		<result column="sName" jdbcType="VARCHAR" property="name" />

		<result column="sIdentifier" jdbcType="VARCHAR" property="identifier" />
		<result column="province" jdbcType="VARCHAR" property="province" />
		<result column="city" jdbcType="VARCHAR" property="city" />
    	<result column="area" jdbcType="VARCHAR" property="area" />
    	<result column="sIdentifier" jdbcType="VARCHAR" property="identifier" />
    	<result column="bank_account" jdbcType="VARCHAR" property="bankAccount" />
		<result column="settlement_type_id" jdbcType="INTEGER" property="settlementTypeId" />
		<result column="settlementTypeName" jdbcType="VARCHAR" property="settlementTypeName" />
		<result column="classificationOneName" jdbcType="VARCHAR" property="classificationOneName" />
   		<result column="classificationTweName" jdbcType="VARCHAR" property="classificationTweName" />
    	<association property="department" javaType="com.jl.psi.model.Department"
			resultMap="DepartmentResultMap" />

		

	</resultMap>
	<!-- 部门信息 -->
	<resultMap id="DepartmentResultMap" type="com.jl.psi.model.Department">
    <result column="departmentName" jdbcType="VARCHAR" property="name" />
  </resultMap>

	<!-- 运输方式 -->
	<resultMap id="ShippingModeResultMap" type="com.jl.psi.model.ShippingMode">
		<result column="smName" jdbcType="VARCHAR" property="name" />
	</resultMap>

	<!-- 仓库 -->
	<resultMap id="WarehouseResultMap" type="com.jl.psi.model.Warehouse">
		<result column="wName" jdbcType="VARCHAR" property="name" />
	</resultMap>



	<sql id="Base_Column_List">
		id, parent_id, identifier, break_code, payment, order_type,
		create_time,
		end_validity_time, deliver_goods_place,
		receipt_goods_place,
		consignee, phone, fax,
		orderer, advance_scale,
		originator, summary, branch, state, is_specimen,
		supcto_id,
		shipping_mode_id, person_id, sales_plan_order_id,print_num,is_show
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from sales_order
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		sales_order
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.jl.psi.model.SalesOrder">
		insert into sales_order (id,
		parent_id, identifier,
		break_code, payment, order_type,
		create_time,
		end_validity_time, deliver_goods_place,
		receipt_goods_place, consignee,
		phone,
		fax, orderer, advance_scale,
		originator, summary, branch,
		state,
		is_specimen, supcto_id,
		shipping_mode_id, person_id,
		sales_plan_order_id,print_num,is_show
		)
		values (#{id,jdbcType=INTEGER},
		#{parentId,jdbcType=INTEGER},
		#{identifier,jdbcType=VARCHAR},
		#{breakCode,jdbcType=VARCHAR}, #{payment,jdbcType=INTEGER},
		#{orderType,jdbcType=INTEGER},
		#{createTime,jdbcType=TIMESTAMP},
		#{endValidityTime,jdbcType=DATE},
		#{deliverGoodsPlace,jdbcType=VARCHAR},
		#{receiptGoodsPlace,jdbcType=VARCHAR}, #{consignee,jdbcType=VARCHAR},
		#{phone,jdbcType=VARCHAR},
		#{fax,jdbcType=VARCHAR},
		#{orderer,jdbcType=VARCHAR}, #{advanceScale,jdbcType=DOUBLE},
		#{originator,jdbcType=VARCHAR}, #{summary,jdbcType=VARCHAR},
		#{branch,jdbcType=VARCHAR},
		#{state,jdbcType=INTEGER},
		#{isSpecimen,jdbcType=INTEGER}, #{supctoId,jdbcType=INTEGER},
		#{shippingModeId,jdbcType=INTEGER}, #{personId,jdbcType=INTEGER},
		#{salesPlanOrderId,jdbcType=INTEGER},
		#{printNum,jdbcType=INTEGER},
		#{isShow,jdbcType=INTEGER}

		)
	</insert>
	<insert id="insertSelective" parameterType="com.jl.psi.model.SalesOrder"
		useGeneratedKeys="true" keyProperty="id">
		insert into sales_order
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="parentId != null">
				parent_id,
			</if>
			<if test="identifier != null">
				identifier,
			</if>
			<if test="breakCode != null">
				break_code,
			</if>
			<if test="payment != null">
				payment,
			</if>
			<if test="orderType != null">
				order_type,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="endValidityTime != null">
				end_validity_time,
			</if>
			<if test="deliverGoodsPlace != null">
				deliver_goods_place,
			</if>
			<if test="receiptGoodsPlace != null">
				receipt_goods_place,
			</if>
			<if test="consignee != null">
				consignee,
			</if>
			<if test="phone != null">
				phone,
			</if>
			<if test="fax != null">
				fax,
			</if>
			<if test="orderer != null">
				orderer,
			</if>
			<if test="advanceScale != null">
				advance_scale,
			</if>
			<if test="originator != null">
				originator,
			</if>
			<if test="summary != null">
				summary,
			</if>
			<if test="branch != null">
				branch,
			</if>
			<if test="state != null">
				state,
			</if>
			<if test="isSpecimen != null">
				is_specimen,
			</if>
			<if test="supctoId != null">
				supcto_id,
			</if>
			<if test="shippingModeId != null">
				shipping_mode_id,
			</if>
			<if test="personId != null">
				person_id,
			</if>
			<if test="salesPlanOrderId != null">
				sales_plan_order_id,
			</if>
			<if test="printNum != null">
				print_num,
			</if>
			<if test="isShow != null">
				is_show,
			</if>
			
			<if test="missOrderId != null">
				miss_order_id,
			</if>
			<if test="activityId != null">
				activity_id,
			</if>
			<if test="isAppOrder != null">
				is_app_order,
			</if>
			<if test="isReturnGoods != null">
				is_return_goods,
			</if>
			<if test="appOrderIdentifier != null">
				app_order_identifier,
			</if>
			<if test="appSendTime != null">
				app_send_time,
			</if>
			<if test="isCreateStockOrder != null">
				is_create_stock_order,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="parentId != null">
				#{parentId,jdbcType=INTEGER},
			</if>
			<if test="identifier != null">
				#{identifier,jdbcType=VARCHAR},
			</if>
			<if test="breakCode != null">
				#{breakCode,jdbcType=VARCHAR},
			</if>
			<if test="payment != null">
				#{payment,jdbcType=INTEGER},
			</if>
			<if test="orderType != null">
				#{orderType,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="endValidityTime != null">
				#{endValidityTime,jdbcType=DATE},
			</if>
			<if test="deliverGoodsPlace != null">
				#{deliverGoodsPlace,jdbcType=VARCHAR},
			</if>
			<if test="receiptGoodsPlace != null">
				#{receiptGoodsPlace,jdbcType=VARCHAR},
			</if>
			<if test="consignee != null">
				#{consignee,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				#{phone,jdbcType=VARCHAR},
			</if>
			<if test="fax != null">
				#{fax,jdbcType=VARCHAR},
			</if>
			<if test="orderer != null">
				#{orderer,jdbcType=VARCHAR},
			</if>
			<if test="advanceScale != null">
				#{advanceScale,jdbcType=DOUBLE},
			</if>
			<if test="originator != null">
				#{originator,jdbcType=VARCHAR},
			</if>
			<if test="summary != null">
				#{summary,jdbcType=VARCHAR},
			</if>
			<if test="branch != null">
				#{branch,jdbcType=VARCHAR},
			</if>
			<if test="state != null">
				#{state,jdbcType=INTEGER},
			</if>
			<if test="isSpecimen != null">
				#{isSpecimen,jdbcType=INTEGER},
			</if>
			<if test="supctoId != null">
				#{supctoId,jdbcType=INTEGER},
			</if>
			<if test="shippingModeId != null">
				#{shippingModeId,jdbcType=INTEGER},
			</if>
			<if test="personId != null">
				#{personId,jdbcType=INTEGER},
			</if>
			<if test="salesPlanOrderId != null">
				#{salesPlanOrderId,jdbcType=INTEGER},
			</if>
			<if test="printNum != null">
				#{printNum,jdbcType=INTEGER},
			</if>
			<if test="isShow != null">
				#{isShow,jdbcType=INTEGER},
			</if>
				<if test="missOrderId != null">
				 #{missOrderId,jdbcType=INTEGER},
			</if>
			<if test="activityId != null">
				 #{activityId,jdbcType=INTEGER},
			</if>
			<if test="isAppOrder != null">
				 #{isAppOrder,jdbcType=INTEGER},
			</if>
			<if test="isReturnGoods != null">
				 #{isReturnGoods,jdbcType=INTEGER},
			</if>	
			<if test="appOrderIdentifier != null">
				#{appOrderIdentifier,jdbcType=VARCHAR},
			</if>
			<if test="appSendTime != null">
				#{appSendTime,jdbcType=TIMESTAMP},
			</if>
			<if test="isCreateStockOrder != null">
				 #{isCreateStockOrder,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.jl.psi.model.SalesOrder">
		update sales_order
		<set>
			<if test="parentId != null">
				parent_id = #{parentId,jdbcType=INTEGER},
			</if>
			<if test="identifier != null">
				identifier = #{identifier,jdbcType=VARCHAR},
			</if>
			<if test="breakCode != null">
				break_code = #{breakCode,jdbcType=VARCHAR},
			</if>
			<if test="payment != null">
				payment = #{payment,jdbcType=INTEGER},
			</if>
			<if test="orderType != null">
				order_type = #{orderType,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="endValidityTime != null">
				end_validity_time = #{endValidityTime,jdbcType=DATE},
			</if>
			<if test="deliverGoodsPlace != null">
				deliver_goods_place =
				#{deliverGoodsPlace,jdbcType=VARCHAR},
			</if>
			<if test="receiptGoodsPlace != null">
				receipt_goods_place =
				#{receiptGoodsPlace,jdbcType=VARCHAR},
			</if>
			<if test="consignee != null">
				consignee = #{consignee,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				phone = #{phone,jdbcType=VARCHAR},
			</if>
			<if test="fax != null">
				fax = #{fax,jdbcType=VARCHAR},
			</if>
			<if test="orderer != null">
				orderer = #{orderer,jdbcType=VARCHAR},
			</if>
			<if test="advanceScale != null">
				advance_scale = #{advanceScale,jdbcType=DOUBLE},
			</if>
			<if test="originator != null">
				originator = #{originator,jdbcType=VARCHAR},
			</if>
			<if test="summary != null">
				summary = #{summary,jdbcType=VARCHAR},
			</if>
			<if test="branch != null">
				branch = #{branch,jdbcType=VARCHAR},
			</if>
			<if test="state != null">
				state = #{state,jdbcType=INTEGER},
			</if>
			<if test="isSpecimen != null">
				is_specimen = #{isSpecimen,jdbcType=INTEGER},
			</if>
			<if test="supctoId != null">
				supcto_id = #{supctoId,jdbcType=INTEGER},
			</if>
			<if test="shippingModeId != null">
				shipping_mode_id = #{shippingModeId,jdbcType=INTEGER},
			</if>
			<if test="personId != null">
				person_id = #{personId,jdbcType=INTEGER},
			</if>
			<if test="salesPlanOrderId != null">
				sales_plan_order_id =
				#{salesPlanOrderId,jdbcType=INTEGER},
			</if>
			<if test="printNum != null">
				print_num = #{printNum,jdbcType=INTEGER},
			</if>
			<if test="isShow != null">
				is_show = #{isShow,jdbcType=INTEGER},
			</if>
			<if test="isCreateStockOrder != null">
				is_create_stock_order = #{isCreateStockOrder,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.jl.psi.model.SalesOrder">
		update sales_order
		set parent_id = #{parentId,jdbcType=INTEGER},
		identifier =
		#{identifier,jdbcType=VARCHAR},
		break_code =
		#{breakCode,jdbcType=VARCHAR},
		payment = #{payment,jdbcType=INTEGER},
		order_type = #{orderType,jdbcType=INTEGER},
		create_time =
		#{createTime,jdbcType=TIMESTAMP},
		end_validity_time =
		#{endValidityTime,jdbcType=DATE},
		deliver_goods_place =
		#{deliverGoodsPlace,jdbcType=VARCHAR},
		receipt_goods_place =
		#{receiptGoodsPlace,jdbcType=VARCHAR},
		consignee =
		#{consignee,jdbcType=VARCHAR},
		phone = #{phone,jdbcType=VARCHAR},
		fax =
		#{fax,jdbcType=VARCHAR},
		orderer = #{orderer,jdbcType=VARCHAR},
		advance_scale = #{advanceScale,jdbcType=DOUBLE},
		originator =
		#{originator,jdbcType=VARCHAR},
		summary = #{summary,jdbcType=VARCHAR},
		branch = #{branch,jdbcType=VARCHAR},
		state = #{state,jdbcType=INTEGER},
		is_specimen = #{isSpecimen,jdbcType=INTEGER},
		supcto_id =
		#{supctoId,jdbcType=INTEGER},
		shipping_mode_id =
		#{shippingModeId,jdbcType=INTEGER},
		person_id =
		#{personId,jdbcType=INTEGER},
		sales_plan_order_id =
		#{salesPlanOrderId,jdbcType=INTEGER},
		print_num =
		#{printNum,jdbcType=INTEGER},
		is_show = #{isShow,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>


	<!-- 根据主键id查询详情 -->
	<select id="selectOrderDetailById" resultMap="BaseResultMap">
		SELECT
		so1.identifier parentIdentifier,
		so.id,
		so.identifier,
		so.parent_id,
		so.payment,
		so.supcto_id,
		so.create_time,
		so.end_validity_time,
		so.originator,
		so.is_specimen,
		so.state,
		so.deliver_goods_place,
		so.receipt_goods_place,
		so.consignee,
		so.orderer,
		so.phone,
		so.fax,
		so.orderer,
		so.advance_scale,
		so.summary,
		so.branch,
		so.shipping_mode_id,
		so.person_id,
		so.sales_plan_order_id,
		so.app_order_identifier,
		so.app_send_time,
		so.is_app_order,
		so.order_type,
		soc.id socId,
		soc.*, s. NAME sName,s.identifier sIdentifier,
		s.bank_account,
		s.settlement_type_id,
		s.province,
		s.city,
		s.area,
		cc.`name` classificationTweName,
		cp.`name` classificationOneName,
		sst.name settlementTypeName,
		sc.price oldUnitPrice,
		c. NAME cName,
		c.id cId,
		c.identifier cIdentifier,
		c.brand,
		cs.specification_name specification_name,
		cs.specification_identifier,
		cs.id csId,
		un.`name` baseUnitName,
		un.bar_code goodsBarCode,
		un.commonly_price baseCommonlyPrice,
		p. NAME uname,
		pe.
		NAME personName,
		pe.department_id
		personDepartmentId,
		d.`name`
		personDepartmentName,
		per1. NAME
		reviewerName,
		per2. NAME
		revokeLeaderName,
		per3. NAME
		revokeWarehouseName,
		per4. NAME
		salesOpeningName,
		per5. NAME
		revisionsalesOpeningName,
		per6. NAME
		foldLossName,

		per1. identifier reviewerIdentifier,
		per2. identifier
		revokeLeaderIdentifier,
		per3. identifier revokeWarehouseIdentifier,
		per4. identifier salesOpeningIdentifier,
		per5. identifier
		revisionsalesOpeningIdentifier,
		per6. identifier foldLossIdentifier,

		sm. NAME smName,
		w.name wname
		FROM
		sales_order so
	LEFT JOIN sales_order so1 ON so1.id = so.parent_id
	LEFT JOIN sales_order_commodity soc ON soc.sales_order_id = so.id
	LEFT JOIN supcto s ON s.id = so.supcto_id
	LEFT JOIN classification cc ON cc.id = s.classification_id
	LEFT JOIN classification cp ON cp.id = cc.parent_id
	LEFT JOIN settlement_type sst ON sst.id = s.settlement_type_id
	LEFT JOIN supcto_commodity sc on sc.supcto_id=s.id and sc.commodity_id=soc.commodity_specification_id
	LEFT JOIN commodity_specification cs ON cs.id = soc.commodity_specification_id
	LEFT JOIN commodity c ON c.id = cs.commodity_id
	LEFT JOIN unit un ON un.specification_id = cs.id AND un.basic_unit = 1
	LEFT JOIN person p ON p.identifier = so.originator
	LEFT JOIN person pe ON pe.id = so.person_id
	LEFT JOIN department d ON d.id = pe.department_id
	LEFT JOIN shipping_mode sm ON sm.id = so.shipping_mode_id
	LEFT JOIN sales_order_reviewer sor1 ON sor1.sales_order_id = so.id AND sor1.reviewer_type = 1
	LEFT JOIN person per1 ON per1.id = sor1.reviewer_id
	LEFT JOIN sales_order_reviewer sor2 ON sor2.sales_order_id = so.id AND sor2.reviewer_type = 2
	LEFT JOIN person per2 ON per2.id = sor2.reviewer_id
	LEFT JOIN sales_order_reviewer sor3 ON sor3.sales_order_id = so.id AND sor3.reviewer_type = 3
	LEFT JOIN person per3 ON per3.id = sor3.reviewer_id
	LEFT JOIN sales_order_reviewer sor4 ON sor4.sales_order_id = so.id AND sor4.reviewer_type = 4
	LEFT JOIN person per4 ON per4.id = sor4.reviewer_id
	LEFT JOIN sales_order_reviewer sor5 ON sor5.sales_order_id = so.id AND sor5.reviewer_type = 5
	LEFT JOIN person per5 ON per5.id = sor5.reviewer_id
	LEFT JOIN sales_order_reviewer sor6 ON sor6.sales_order_id = so.id AND sor6.reviewer_type = 6
	LEFT JOIN person per6 ON per6.id = sor6.reviewer_id
	LEFT JOIN warehouse w ON soc.warehouse_id = w.id
	
	where so.id=#{id,jdbcType=INTEGER}
  </select>
  
	<!-- 获取最大的编号 -->
	<select id="selectMaxIdentifier" resultType="java.lang.String">
		select MAX(identifier) from sales_order where identifier like '%SO%'
	</select>
	<!-- 查找单据类型为其他发货单的最大的编号 -->
	<select id="selectMaxIdentifierToOtherDeliveOrder" resultType="java.lang.String">
		select identifier from sales_order where id=(select MAX(id) from sales_order where identifier like '%OO%')
	</select>


	<!-- 根据id列表更改状态 -->
	<update id="updateStateByIds" parameterType="java.util.Map">
		update sales_order set state = #{state} where id in (
		<foreach collection="ids" item="item" index="index" separator=",">
			#{item}
		</foreach>
		)
	</update>

	<!-- 根据id列表获取信息 -->
	<select id="getSalesOrderByIds" parameterType="java.util.List"
		resultMap="BaseResultMap">
		select * from sales_order where id in (
		<foreach collection="list" item="item" separator=",">
			#{item}
		</foreach>
		)

	</select>
	
	<!-- 根据parentId列表和orderType获取销售订单列表 -->
	<select id="getSalesOrderByOrderTypeAndParentId" parameterType="java.util.Map"
		resultMap="BaseResultMap">
		SELECT * from sales_order where order_type=#{orderType} and parent_id in(
		<foreach collection="parentIds" item="item" separator=",">
			#{item}
		</foreach>
		)

	</select>
	
	<!--  根据parentId列表和orderType更改状态 -->
	<update id="updateStateByOrderTypeAndParentId" parameterType="java.util.Map">
		update sales_order set state = #{state} where order_type = #{orderType} and parent_id = #{parentId}
		
	</update>
	

	<!-- 批量添加 -->
	<insert id="insertBatch" parameterType="java.util.List"
		useGeneratedKeys="true" keyProperty="id">
		insert into sales_order (parent_id, identifier,
		break_code, payment,
		order_type,
		create_time, end_validity_time, deliver_goods_place,
		receipt_goods_place, consignee, phone,
		fax, orderer, advance_scale,
		originator, summary, branch,
		state, is_specimen, supcto_id,
		shipping_mode_id, person_id, sales_plan_order_id,print_num,is_show
		)
		values
		<foreach collection="list" item="so" separator=",">
			(
			#{so.parentId,jdbcType=INTEGER},
			#{so.identifier,jdbcType=VARCHAR},
			#{so.breakCode,jdbcType=VARCHAR}, #{so.payment,jdbcType=INTEGER},
			#{so.orderType,jdbcType=INTEGER},
			#{so.createTime,jdbcType=TIMESTAMP},
			#{so.endValidityTime,jdbcType=DATE},
			#{so.deliverGoodsPlace,jdbcType=VARCHAR},
			#{so.receiptGoodsPlace,jdbcType=VARCHAR}, #{so.consignee,jdbcType=VARCHAR},
			#{so.phone,jdbcType=VARCHAR},
			#{so.fax,jdbcType=VARCHAR},
			#{so.orderer,jdbcType=VARCHAR}, #{so.advanceScale,jdbcType=DOUBLE},
			#{so.originator,jdbcType=VARCHAR}, #{so.summary,jdbcType=VARCHAR},
			#{so.branch,jdbcType=VARCHAR},
			#{so.state,jdbcType=INTEGER},
			#{so.isSpecimen,jdbcType=INTEGER}, #{so.supctoId,jdbcType=INTEGER},
			#{so.shippingModeId,jdbcType=INTEGER}, #{so.personId,jdbcType=INTEGER},
			#{so.salesPlanOrderId,jdbcType=INTEGER},
			#{so.printNum,jdbcType=INTEGER},
			#{so.isShow,jdbcType=INTEGER}
			)
		</foreach>
	</insert>

	<!-- 根据仓库id以及销售订单id批量查询商品    查出的结果不对 暂无用-->
	<select id="selectBatchCommodityByWareIdAndOrderId"
		parameterType="java.util.List" resultMap="BaseResultMap">
		<foreach collection="list" item="soc" index="index" separator="UNION">
			SELECT
			*
			FROM
			sales_order so
			LEFT JOIN sales_order_commodity soc on soc.sales_order_id=so.id
			WHERE
			soc.warehouse_id = #{soc.warehouseId,jdbcType=INTEGER}
			AND so.id = #{soc.salesOrderId,jdbcType=INTEGER}
		</foreach>
	</select>
	
	<!-- 根据仓库id以及销售订单id查询商品 -->
	<select id="selectCommodityByWareIdAndOrderId"  resultMap="BaseResultMap">
			SELECT
			*
			FROM
			sales_order so
			LEFT JOIN sales_order_commodity soc on soc.sales_order_id=so.id
			WHERE
			soc.warehouse_id = #{warehouseId,jdbcType=INTEGER}
			AND so.id = #{salesOrderId,jdbcType=INTEGER}
	</select>
	
	<!--批量删除-->
	<delete id="deleteBatchByPrimaryKey" parameterType="java.util.List">
		delete from
		sales_order
		where id in (
		<foreach collection="list" item="so" separator=",">
			#{so.id,jdbcType=INTEGER}
		</foreach>
		)
	</delete>
	
	<!-- 根据销售订单id获取其所属的父id -->
	<select id="selectParentIdByPrimaryKey" resultMap="BaseResultMap">
		select parent_id,id,identifier from sales_order  
		where id  in (
		<foreach collection="list" item="item" separator=",">
			#{item}
		</foreach>
		) 
		
	</select>
	
	<!-- 根据id列表更改状态以及是否显示 -->
	<update id="updateStateAndIsShowByIds" parameterType="java.util.Map">
		update sales_order set state = #{state} ,is_show = #{isShow} where id in (
		<foreach collection="ids" item="item" index="index" separator=",">
			#{item}
		</foreach>
		)
	</update>

	<!-- 根据父id以及订单类型查询信息 -->
	<select id="selectMsgByParentIdAndOrderType" resultMap="BaseResultMap">
		SELECT
			soc.deliver_goods_num,
			so.create_time,
			so.id,
			so.parent_id,
			so.state,
			soc.id socId,
			soc.unit_price,
			soc.taxes,
			soc.damage_money,
			soc.damage_num,
			soc.return_goods_num,
			soc.commodity_specification_id,
			soc.warehouse_id,
			soc.deliver_goods_num,
			cs.specification_name,
			c.`name` cName
		FROM
			sales_order so
		LEFT JOIN sales_order_commodity soc ON soc.sales_order_id = so.id
		LEFT JOIN commodity_specification cs ON cs.id = soc.commodity_specification_id
		LEFT JOIN commodity c ON c.id = cs.commodity_id
		WHERE
			so.parent_id = #{parentId,jdbcType=INTEGER}
		AND so.order_type = #{orderType,jdbcType=INTEGER}
	</select>
	
	<!-- 根据编号以及是否显示查询id -->
	<select id="selectIdByIdentifierAndState" resultMap="BaseResultMap">
		SELECT
			so.id,so.identifier,so.is_show,so.state
		FROM
			sales_order so
		WHERE
	 		so.is_show = 2 
	 	and so.break_code &gt; 0
		AND so.identifier in (
		<foreach collection="list" item="item" separator=",">
			#{item}
		</foreach>
		)
	
	</select>

	<!-- 根据编号以及是否显示查询id -->
	<select id="selectIdByIdentifierAndIsNoShow" resultMap="BaseResultMap">
		SELECT
			so.id,so.is_show
		FROM
			sales_order so
		WHERE
	 		so.is_show = 1 
		AND so.identifier in (
		<foreach collection="list" item="item" separator=",">
			#{item}
		</foreach>
		)
	
	</select>

	<!-- 获取所有可以进行退货的销售订单（即：orderType=1  &  state = 12） -->
	<select id="getAllSalesOrderCanReturn"  resultMap="BaseResultMap">
			SELECT
				so.id,
				so.identifier,
				so.break_code,
				so.supcto_id,
				s.name sName,
				s.identifier sIdentifier,
				so.end_validity_time,
				so.deliver_goods_place,
				so.shipping_mode_id,
				so.consignee,
				so.phone,
				so.fax
			FROM
				sales_order so
			LEFT JOIN supcto s 
			on s.id=so.supcto_id
			WHERE
				so.order_type = 1
			AND so.state = 12
	</select>
	
	<!-- 获取app过来的销售订单中需要退货的订单 -->
	<select id="selectAppRturnGoodsSalesOrderMsg" resultMap="BaseResultMap">
	SELECT
		so.id,
		so.identifier,
		u.`name` consignee,
		u.phone phone,
		so.app_order_identifier,
		so.miss_order_id
	FROM
		sales_order so
	LEFT JOIN `demo-jldatabase`.order_table ot on ot.id=so.miss_order_id
	LEFT JOIN `demo-jldatabase`.`user` u on u.id=ot.user_id
	WHERE
		so.is_app_order = 2
	AND so.order_type = 1
	AND so.is_return_goods = 1
	</select>

	<!--定义一个sql片段 -->
	<sql id="query_where">
		<if test="identifier!=null and identifier!=''">
			AND so.identifier like '%${identifier}%'
		</if>
		<if test="commodityName!=null and commodityName!=''">
			AND c.name like '%${commodityName}%'
		</if>
		<if test="supctoName!=null and supctoName!='' and isAppOrder==2">
			and (
			s.name like
			CONCAT(CONCAT("%",#{supctoName}),"%")
			or so.orderer like
			CONCAT(CONCAT("%",#{supctoName}),"%")
			)
		</if>
		<if test="supctoName!=null and supctoName!='' and isAppOrder!=2">
			and s.name like '%${supctoName}%'	
		</if>
		<if test="isSpecimen!=0">
			AND so.is_specimen=#{isSpecimen}
		</if>
		<if test="type==32">
			AND so.state=32
		</if>
		<if test="type==33">
			AND so.state=33
		</if>
		<if test="name!=null and name!=''">
			AND so.consignee like '%${name}%'
		</if>
		<if test="phone!=null and phone!=''">
			AND so.phone like '%${phone}%'
		</if>
		<if test="date!=null and date!=''">
			AND DATE_FORMAT(so.create_time,'%Y-%m-%d') = '${date}'
		</if>
		<if test="orderer!=null and orderer!=''">
			AND so.orderer like '%${orderer}%'
		</if>

		<if test="beginTime!=null and beginTime!=''">
			AND date_format(so.create_time,'%Y-%m-%d') &gt;= #{beginTime}
			AND date_format(so.create_time,'%Y-%m-%d') &lt;= #{endTime}
		</if>
		<if test="provinceCode!=null and provinceCode!='' and provinceCode!=-1">
			AND s.province_code =#{provinceCode}
		</if>
		<if test="cityCode!=null and cityCode!='' and cityCode!=-1">
			AND s.city_code =#{cityCode}
		</if>
		<if test="areaCode!=null and areaCode!='' and areaCode!=-1">
			AND s.area_code =#{areaCode}
		</if>
		<if test="classificationId!=null and classificationId!='' and classificationId!=-1">
			AND s.classification_id =#{classificationId}
		</if>
		

	</sql>
	


	<!-- datatable 分页 start -->
	<!-- 查询记录总条数 -->
	<select id="iTotalRecords" resultType="java.lang.Integer">
		SELECT
		COUNT(1)
		FROM
		(
		SELECT
		COUNT(1)
		from sales_order so
		LEFT JOIN
		sales_order_commodity soc on soc.sales_order_id = so.id
		LEFT JOIN
		supcto s on s.id=so.supcto_id
		LEFT JOIN commodity_specification cs on
		cs.id=soc.commodity_specification_id
		LEFT JOIN commodity c ON c.id =
		cs.commodity_id
		LEFT JOIN person p ON p.identifier = so.originator
		WHERE so.is_show=2
		<if test="page==1">
			and so.order_type = 1
		</if>
		<if test="page==2">
			and so.order_type = 1
			and so.state = 2
		</if>
		<if test="page==3">
			and so.order_type = 1
			and so.state in(6,7,34)
		</if>
		<if test="page==4">
			and so.order_type = 4
			and so.state in(19,22)
		</if>
		<if test="page==5">
			and so.order_type = 1
			and so.state in(5,9)
			and so.is_create_stock_order!=1
		</if>
		<if test="page==6">
			and so.order_type = 1
			and so.state = 4
		</if>
		<if test="page==7">
			and so.order_type = 3
			and so.state in(20,21,24)
		</if>
		<if test="page==8">
			and so.order_type = 2
			and so.state in
			(13,14,15,16,17,18,21,22,23)
		</if>
		<if test="page==9">
			and so.order_type = 4
		</if>
		<if test="page==10">
			and so.order_type = 2
			and so.state = 13
		</if>
		<if test="page==11">
			and so.order_type = 2
			and so.state = 16
		</if>
		<if test="page==12">
			and so.order_type = 1
			and so.state = 8
		</if>
		<if test="page==13">
			and so.order_type = 3
			<!-- and so.state in(11,12,26,7,10) -->
		</if>
		<if test="page==14">
			and so.order_type = 5
		</if>
		<if test="page==15">
			and so.order_type = 6
			and (so.is_app_order=1 or so.is_app_order is null)
		</if>
		<if test="page==16">
			and so.order_type = 6
			and so.state = 28
		</if>
		<if test="page==17">
			and so.order_type = 6
			and so.state in(30,31)
		</if>
		<if test="page==18">
			and so.order_type = 6
			and so.state = 31
		</if>
		<if test="page==19">
			and so.order_type = 7
			and so.is_app_order=2
			and so.state in (32,33) 
		</if>
		<if test="page==20">
			and so.order_type = 6
			and so.is_app_order=2
			and so.state in (30,31)
			and so.is_return_goods in (2,3) 
		</if>
		<if test="page==21">
			and so.order_type = 8
		</if>
		<if test="page==22">
			and so.order_type = 8
			and so.state = 2
		</if>
		<if test="page==23">
			and so.order_type = 8
			and so.state = 36
		</if>
		<if test="page==24">
			and so.order_type = 8
			and so.state in(5,9)
		</if>
		<if test="page==25">
			and so.order_type = 9
		</if>
		<if test="page==26">
			and so.order_type = 9
			and so.state in(24,15)
		</if>
		<if test="page==27">
			and so.order_type = 8
			and so.state in(6,7)
		</if>
		<if test="page==28">
			and so.order_type = 8
			and so.state = 8
		</if>
		GROUP BY
		so.id
		) msg
	</select>
	<!-- 查询所有信息 结果集 -->
	<select id="selectForSearch" resultMap="BaseResultMap">

		SELECT
		so.id,
		so.parent_id,
		so.identifier,
		so.break_code,
		so.payment,
		so.create_time,
		so.end_validity_time,
		so.originator,
		so.is_specimen,
		so.state,
		so.print_num,
		so.consignee,
		so.orderer,	
		so.phone,
		so.receipt_goods_place,
		so.miss_order_id missOrderId,
		so.is_app_order,
		so.is_return_goods,
		so.app_order_identifier,
		so.originator,
		so.order_type,
		soc.*,
		s.name sName,
		c.name cName,
		cs.specification_name
		specification_name,
		p.name uname

		from sales_order so
		LEFT JOIN
		sales_order_commodity soc on
		soc.sales_order_id = so.id
		LEFT JOIN supcto
		s on s.id=so.supcto_id
		LEFT
		JOIN commodity_specification cs on
		cs.id=soc.commodity_specification_id
		LEFT JOIN commodity c ON c.id =
		cs.commodity_id
		LEFT JOIN person p ON p.identifier = so.originator
		WHERE so.is_show=2
		<if test="page==1">
			and so.order_type = 1
			<if test="state==1">
				AND so.state in (1,27)
			</if>
			<if test="state==2">
				AND so.state in (2,6,7,8,13,16,19,22,28,34,36)
			</if>
			<if test="state==3">
				AND so.state in (18,21,30)
			</if>
			<if test="state==4">
				AND so.state in (3,9,14,17,20,23,25,29)
			</if>
			<if test="state==5">
				AND (so.state in (4,5,10,15,24,26,31,32,35) or (so.state = 33 and so.is_return_goods in(1,2,3)))
			</if>
			<if test="state==6">
				AND so.state = 11
			</if>
			<if test="state==7">
				AND (so.state = 12 or (so.state = 33 and so.is_return_goods != 1 and so.is_return_goods != 2 and so.is_return_goods != 3))
			</if>
			<if test="state==8">
				AND so.state = 37
			</if>
		</if>
		<if test="page==2">
			and so.order_type = 1
			and so.state = 2
		</if>
		<if test="page==3">
			and so.order_type = 1
			and so.state in(6,7,34)
		</if>
		<if test="page==4">
			and so.order_type = 4
			and so.state in(19,22)
		</if>
		<if test="page==5">
			and so.order_type = 1
			and so.state in(5,9)
			and so.is_create_stock_order!=1
			<if test="state==1">
				AND so.state = 5
			</if>
			<if test="state==2">
				AND so.state = 9
			</if>
		</if>
		<if test="page==6">
			and so.order_type = 1
			and so.state = 4
		</if>
		<if test="page==7">
			and so.order_type = 3
			and so.state in(20,21,24)
			<if test="state==1">
				AND so.state = 20
			</if>
			<if test="state==2">
				AND so.state = 21
			</if>
			<if test="state==3">
				AND so.state = 24
			</if>
		</if>
		<if test="page==8">
			and so.order_type = 2
			and so.state in
			(13,14,15,16,17,18,21,22,23)
			<if test="state==1">
				AND so.state in (13,16,22)
			</if>
			<if test="state==2">
				AND so.state in (18,21)
			</if>
			<if test="state==3">
				AND so.state in (14,17,23)
			</if>
			<if test="state==4">
				AND so.state = 15
			</if>
		</if>
		<if test="page==9">
			and so.order_type = 4
			<if test="state==1">
				AND so.state in (1,27)
			</if>
			<if test="state==2">
				AND so.state in (2,6,7,8,13,16,19,22,28,34,36)
			</if>
			<if test="state==3">
				AND so.state in (18,21,30)
			</if>
			<if test="state==4">
				AND so.state in (3,9,14,17,20,23,25,29)
			</if>
			<if test="state==5">
				AND so.state in (4,5,10,11,12,15,24,26,31,32,33,35)
			</if>
		</if>
		<if test="page==10">
			and so.order_type = 2
			and so.state = 13
		</if>
		<if test="page==11">
			and so.order_type = 2
			and so.state = 16
		</if>
		<if test="page==12">
			and so.order_type = 1
			and so.state = 8
		</if>
		<if test="page==13">
			and so.order_type = 3
			<!-- and so.state in(11,12,26,7,10) -->
			
			<if test="state==2">
				AND so.state in (2,6,7,8,13,16,19,22,28,34,36)
			</if>
			<if test="state==3">
				AND so.state = 15
			</if>
			<if test="state==4">
				AND so.state in (3,9,14,17,20,23,25,29)
			</if>
			<if test="state==5">
				AND so.state in (4,5,10,11,12,24,26,31,32,33,35)
			</if>
		</if>
		<if test="page==14">
			and so.order_type = 5
			<if test="state==1">
				AND so.state in (1,27)
			</if>
			<if test="state==2">
				AND so.state in (2,6,7,8,13,16,19,22,28,34,36)
			</if>
			<if test="state==3">
				AND so.state in (18,21,30)
			</if>
			<if test="state==4">
				AND so.state in (3,9,14,17,20,23,25,29)
			</if>
			<if test="state==5">
				AND so.state in (4,5,10,11,12,15,24,26,31,32,33,35)
			</if>
		</if>
		<if test="page==15">
			and so.order_type = 6
			and (so.is_app_order=1 or so.is_app_order is null)
			<if test="state==1">
				AND so.state in (1,27)
			</if>
			<if test="state==2">
				AND so.state in (2,6,7,8,13,16,19,22,28,34,36)
			</if>
			<if test="state==3">
				AND so.state in (18,21,30)
			</if>
			<if test="state==4">
				AND so.state in (3,9,14,17,20,23,25,29)
			</if>
			<if test="state==5">
				AND so.state in (4,5,10,11,12,15,24,26,31,32,33,35)
			</if>
			<if test="state==8">
				AND so.state = 37
			</if>
		</if>
		<if test="page==16">
			and so.order_type = 6
			and so.state = 28
		</if>
		<if test="page==17">
			and so.order_type = 6
			and so.state in(30,31)
			<if test="state==1">
				AND so.state = 30
			</if>
			<if test="state==2">
				AND so.state = 31
			</if>
		</if>
		<if test="page==18">
			and so.order_type = 6
			and so.state = 31
		</if>
		<if test="page==19">
			and so.order_type = 7
			and so.is_app_order=2
			and so.state in (32,33) 
		</if>
		<if test="page==20">
			and so.order_type = 6
			and so.is_app_order=2
			and so.state in (30,31)
			and so.is_return_goods in (2,3) 
		</if>
		<if test="page==21">
			and so.order_type = 8
			<if test="state==1">
				AND so.state in (1,27)
			</if>
			<if test="state==2">
				AND so.state in (2,6,7,8,13,16,19,22,28,34,36)
			</if>
			<if test="state==3">
				AND so.state in (18,21,30)
			</if>
			<if test="state==4">
				AND so.state in (3,9,14,17,20,23,25,29)
			</if>
			<if test="state==5">
				AND so.state in (4,5,10,11,12,15,24,26,31,32,33,35)
			</if>
			<if test="state==8">
				AND so.state = 37
			</if>
		</if>
		<if test="page==22">
			and so.order_type = 8
			and so.state = 2
		</if>
		<if test="page==23">
			and so.order_type = 8
			and so.state = 36
		</if>
		<if test="page==24">
			and so.order_type = 8
			and so.state in(5,9)
			<if test="state==1">
				AND so.state = 5
			</if>
			<if test="state==2">
				AND so.state = 9
			</if>
		</if>
		<if test="page==25">
			and so.order_type = 9
			<if test="state==1">
				AND so.state = 11
			</if>
			<if test="state==2">
				AND so.state in (6,7,8,34)
			</if>
			<if test="state==3">
				AND so.state = 10
			</if>
			<if test="state==4">
				AND so.state = 12
			</if>
			<if test="state==5">
				AND so.state = 24
			</if>
			<if test="state==6">
				AND so.state = 15
			</if>
		</if>
		<if test="page==26">
			and so.order_type = 9
			and so.state in(24,15)
			<if test="state==1">
				AND so.state = 15
			</if>
			<if test="state==2">
				AND so.state = 24
			</if>
		</if>
		<if test="page==27">
			and so.order_type = 8
			and so.state in(6,7)
		</if>
		<if test="page==28">
			and so.order_type = 8
			and so.state = 8
		</if>
		<include refid="query_where"></include>
		<if test="desc!=null and desc!='' ">
			order by ${desc} desc
		</if>
		<if test="asc!=null and asc!='' ">
			order by ${asc} asc
		</if>
		<!-- limit ${iDisplayStart},${pageDisplayLength} -->
	</select>
	<!-- 通过查询条件过滤后的总记录 -->
	<select id="iTotalDisplayRecords" resultType="java.lang.Integer">
		SELECT
		COUNT(1)
		FROM
		(
		SELECT
		COUNT(1)
		from sales_order so
		LEFT JOIN
		sales_order_commodity soc on soc.sales_order_id = so.id
		LEFT JOIN
		supcto s on s.id=so.supcto_id
		LEFT JOIN commodity_specification cs on
		cs.id=soc.commodity_specification_id
		LEFT JOIN commodity c ON c.id =
		cs.commodity_id
		LEFT JOIN person p ON p.identifier = so.originator
		WHERE so.is_show=2
		<if test="page==1">
			and so.order_type = 1
			<if test="state==1">
				AND so.state in (1,27)
			</if>
			<if test="state==2">
				AND so.state in (2,6,7,8,13,16,19,22,28,34,36)
			</if>
			<if test="state==3">
				AND so.state in (18,21,30)
			</if>
			<if test="state==4">
				AND so.state in (3,9,14,17,20,23,25,29)
			</if>
			<if test="state==5">
				AND (so.state in (4,5,10,15,24,26,31,32,35) or (so.state = 33 and so.is_return_goods in(1,2,3)))
			</if>
			<if test="state==6">
				AND so.state = 11
			</if>
			<if test="state==7">
				AND (so.state = 12 or (so.state = 33 and so.is_return_goods != 1 and so.is_return_goods != 2 and so.is_return_goods != 3))
			</if>
			<if test="state==8">
				AND so.state = 37
			</if>
		</if>
		<if test="page==2">
			and so.order_type = 1
			and so.state = 2
		</if>
		<if test="page==3">
			and so.order_type = 1
			and so.state in(6,7,34)
		</if>
		<if test="page==4">
			and so.order_type = 4
			and so.state in(19,22)
		</if>
		<if test="page==5">
			and so.order_type = 1
			and so.state in(5,9)
			and so.is_create_stock_order!=1
			<if test="state==1">
				AND so.state = 5
			</if>
			<if test="state==2">
				AND so.state = 9
			</if>
		</if>
		<if test="page==6">
			and so.order_type = 1
			and so.state = 4
		</if>
		<if test="page==7">
			and so.order_type = 3
			and so.state in(20,21,24)
			<if test="state==1">
				AND so.state = 20
			</if>
			<if test="state==2">
				AND so.state = 21
			</if>
			<if test="state==3">
				AND so.state = 24
			</if>
		</if>
		<if test="page==8">
			and so.order_type = 2
			and so.state in
			(13,14,15,16,17,18,21,22,23)
			<if test="state==1">
				AND so.state in (13,16,22)
			</if>
			<if test="state==2">
				AND so.state in (18,21)
			</if>
			<if test="state==3">
				AND so.state in (14,17,23)
			</if>
			<if test="state==4">
				AND so.state = 15
			</if>
		</if>
		<if test="page==9">
			and so.order_type = 4
			<if test="state==1">
				AND so.state in (1,27)
			</if>
			<if test="state==2">
				AND so.state in (2,6,7,8,13,16,19,22,28,34,36)
			</if>
			<if test="state==3">
				AND so.state in (18,21,30)
			</if>
			<if test="state==4">
				AND so.state in (3,9,14,17,20,23,25,29)
			</if>
			<if test="state==5">
				AND so.state in (4,5,10,11,12,15,24,26,31,32,33,35)
			</if>
		</if>
		<if test="page==10">
			and so.order_type = 2
			and so.state = 13
		</if>
		<if test="page==11">
			and so.order_type = 2
			and so.state = 16
		</if>
		<if test="page==12">
			and so.order_type = 1
			and so.state = 8
		</if>
		<if test="page==13">
			and so.order_type = 3
			<!-- and so.state in(11,12,26,7,10) -->
			<if test="state==1">
				AND so.state in (1,27)
			</if>
			<if test="state==2">
				AND so.state in (2,6,7,8,13,16,19,22,28,34,36)
			</if>
			<if test="state==3">
				AND so.state in (18,21,30)
			</if>
			<if test="state==4">
				AND so.state in (3,9,14,17,20,23,25,29)
			</if>
			<if test="state==5">
				AND so.state in (4,5,10,11,12,15,24,26,31,32,33,35)
			</if>
		</if>
		<if test="page==14">
			and so.order_type = 5
			<if test="state==1">
				AND so.state in (1,27)
			</if>
			<if test="state==2">
				AND so.state in (2,6,7,8,13,16,19,22,28,34,36)
			</if>
			<if test="state==3">
				AND so.state in (18,21,30)
			</if>
			<if test="state==4">
				AND so.state in (3,9,14,17,20,23,25,29)
			</if>
			<if test="state==5">
				AND so.state in (4,5,10,11,12,15,24,26,31,32,33,35)
			</if>
		</if>
		
		<if test="page==15">
			and so.order_type = 6
			and (so.is_app_order=1 or so.is_app_order is null)
			<if test="state==1">
				AND so.state in (1,27)
			</if>
			<if test="state==2">
				AND so.state in (2,6,7,8,13,16,19,22,28,34,36)
			</if>
			<if test="state==3">
				AND so.state in (18,21,30)
			</if>
			<if test="state==4">
				AND so.state in (3,9,14,17,20,23,25,29)
			</if>
			<if test="state==5">
				AND so.state in (4,5,10,11,12,15,24,26,31,32,33,35)
			</if>
			<if test="state==8">
				AND so.state = 37
			</if>
		</if>
		<if test="page==16">
			and so.order_type = 6
			and so.state = 28
		</if>
		<if test="page==17">
			and so.order_type = 6
			and so.state in(30,31)
			<if test="state==1">
				AND so.state = 30
			</if>
			<if test="state==2">
				AND so.state = 31
			</if>
		</if>
		<if test="page==18">
			and so.order_type = 6
			and so.state = 31
		</if>
		<if test="page==19">
			and so.order_type = 7
			and so.is_app_order=2
			and so.state in (32,33) 
		</if>
		<if test="page==20">
			and so.order_type = 6
			and so.is_app_order=2
			and so.state in (30,31)
			and so.is_return_goods in (2,3) 
		</if>
		<if test="page==21">
			and so.order_type = 8
			<if test="state==1">
				AND so.state in (1,27)
			</if>
			<if test="state==2">
				AND so.state in (2,6,7,8,13,16,19,22,28,34,36)
			</if>
			<if test="state==3">
				AND so.state in (18,21,30)
			</if>
			<if test="state==4">
				AND so.state in (3,9,14,17,20,23,25,29)
			</if>
			<if test="state==5">
				AND so.state in (4,5,10,11,12,15,24,26,31,32,33,35)
			</if>
			<if test="state==8">
				AND so.state = 37
			</if>
		</if>
		<if test="page==22">
			and so.order_type = 8
			and so.state = 2
		</if>
		<if test="page==23">
			and so.order_type = 8
			and so.state = 36
		</if>
		<if test="page==24">
			and so.order_type = 8
			and so.state in(5,9)
			<if test="state==1">
				AND so.state = 5
			</if>
			<if test="state==2">
				AND so.state = 9
			</if>
		</if>
		<if test="page==25">
			and so.order_type = 9
			<if test="state==1">
				AND so.state = 11
			</if>
			<if test="state==2">
				AND so.state in (6,7,8,34)
			</if>
			<if test="state==3">
				AND so.state = 10
			</if>
			<if test="state==4">
				AND so.state = 12
			</if>
			<if test="state==5">
				AND so.state = 24
			</if>
			<if test="state==6">
				AND so.state = 15
			</if>
		</if>
		<if test="page==26">
			and so.order_type = 9
			and so.state in(24,15)
			<if test="state==1">
				AND so.state = 15
			</if>
			<if test="state==2">
				AND so.state = 24
			</if>
		</if>
		<if test="page==27">
			and so.order_type = 8
			and so.state in(6,7)
		</if>
		<if test="page==28">
			and so.order_type = 8
			and so.state = 8
		</if>
		<include refid="query_where"></include>
		GROUP BY
		so.id
		) msg
	</select>
	<!-- datatable 分页 end -->
	
	
	
	<update id="updateSalesOrderState" parameterType="java.lang.Integer">
		UPDATE
		sales_order
		SET
		state=12
		WHERE
		order_type=#{arg1}
		AND
		id=#{arg0}

	</update>
	
	
	
	<!--表报查询条件  -->
	<sql id="query_where_base">
	  	<!--单号  -->
		<if test="identifier!=null and identifier!=''">
			AND so.identifier like '%${identifier}%'
		</if>
		<!--运输方式  -->
		<if test="shippingModel!=null and shippingModel!='' and shippingModel!=-1">
			AND so.shipping_mode_id='${shippingModel}'
		</if>
		
		<!--客户名称分类  -->
		<if test="supctoTypeClassId!=null and supctoTypeClassId!='' and supctoTypeClassId!=-1">		
			AND cla.parent_id='${supctoTypeClassId}'
		</if>
		<!--客户名称二级分类  -->
		<if test="supctoTypeClassTwoId!=null and supctoTypeClassTwoId!='' and supctoTypeClassTwoId!=-1">
			AND s.classification_id='${supctoTypeClassTwoId}'
		</if>
		<!--客户名称  -->
		<if test="supctoName!=null and supctoName!=''">
			AND s.name  like '%${supctoName}%'
		</if>
		<!--省份  -->
		<if test="province!=null and province!=''">
			AND s.province_code='${province}'
		</if>
		<!--市  -->
		<if test="city!=null and city!=''">
			AND s.city_code='${city}'
		</if>
		<!-- 区 -->
		<if test="area!=null and area!=''">
			AND s.area_code='${area}'
		</if>
		<!--商品名称  -->
		<if test="cname!=null and cname!=''">
			AND c.name like '%${cname}%'
		</if>
		<!-- 商品编码 -->
		<if test="commodity_identifier!=null and commodity_identifier!=''">
			AND cs.specification_identifier like '%${commodity_identifier}%'
		</if>
		<!--品牌  -->
		<if test="brand!=null and brand!=''">
			AND c.brand like '%${brand}%'
		</if>
		<!--开单部门  -->
		<if test="departmentClassOneId!=null and departmentClassOneId!='' and departmentClassOneId!='-1'">
			AND dk.id='${departmentClassOneId}'
		</if>
		<!--开单人  -->
		<if test="makeOrderPersonId!=null and makeOrderPersonId!='' and makeOrderPersonId!='-1'">
			AND k.identifier='${makeIdentifier}'
		</if>
		<!--审核部门  -->
		<if test="checkDepartmentId!=null and checkDepartmentId!='' and checkDepartmentId!='-1'">
			AND dr.id='${checkDepartmentId}'
		</if>
		<!--审核人  -->
		<if test="checkPersonId!=null and checkPersonId!='' and checkPersonId!='-1'">
			AND r.identifier='${rewviewIdentifier}'
		</if>
		<!--时间  -->
		<if test="beginTime!=null and beginTime!=''">
			AND
			so.create_time
			BETWEEN
			'${beginTime}'
			AND
			DATE_ADD('${closeTime}',INTERVAL 1 DAY)
		</if>
		
		<!--仓库  -->
		<if test="warehouseMsgId!=null and warehouseMsgId!='' and warehouseMsgId!=-1">
			AND i.warehouse_id='${warehouseMsgId}'
		</if>
		
		
		
	</sql>
	<sql id="query_where_state">
		<!-- 待审核 -->
		<if test="state==1 and state!=-1">
			AND so.state in (2,6,7,13,16,19,22,28,34,36)
		</if>
		<!-- 已审核 -->
		<if test="state==2 and state!=-1">
			AND so.state in (3,9,14,17,18,20,21,23,29,30)
		</if>
		<!-- 已入库 -->
		<if test="state==3 and state!=-1">
			AND so.state=31
		</if>
		<!-- 已出库 -->
		<if test="state==4 and state!=-1">
			AND so.state in (12,33)
		</if>
		<!-- 已开单 -->
		<if test="state==5 and state!=-1">
			AND so.state=15
		</if>
		<!-- 已终止 -->
		<if test="state==6 and state!=-1">
			AND so.state=10
		</if>
		<!-- 其他 -->
		<if test="state==7 and state!=-1">
			AND so.state IN (1,4,5,8,11,24,25,26,27,32,35)
		</if>
	</sql>
	
	<!--表报查询条件  -->
	<sql id="query_where_base_no_checkperson">
	  	<!--单号  -->
		<if test="identifier!=null and identifier!=''">
			AND so.identifier like '%${identifier}%'
		</if>
		<!--运输方式  -->
		<if test="shippingModel!=null and shippingModel!='' and shippingModel!=-1">
			AND so.shipping_mode_id='${shippingModel}'
		</if>
		
		<!--客户名称分类  -->
		<if test="supctoTypeClassId!=null and supctoTypeClassId!='' and supctoTypeClassId!=-1">		
			AND cla.parent_id='${supctoTypeClassId}'
		</if>
		<!--客户名称二级分类  -->
		<if test="supctoTypeClassTwoId!=null and supctoTypeClassTwoId!='' and supctoTypeClassTwoId!=-1">
			AND s.classification_id='${supctoTypeClassTwoId}'
		</if>
		<!--客户名称  -->
		<if test="supctoName!=null and supctoName!=''">
			AND s.name  like '%${supctoName}%'
		</if>
		<!--省份  -->
		<if test="province!=null and province!=''">
			AND s.province_code='${province}'
		</if>
		<!--市  -->
		<if test="city!=null and city!=''">
			AND s.city_code='${city}'
		</if>
		<!-- 区 -->
		<if test="area!=null and area!=''">
			AND s.area_code='${area}'
		</if>
		<!--商品名称  -->
		<if test="cname!=null and cname!=''">
			AND c.name like '%${cname}%'
		</if>
		<!-- 商品编码 -->
		<if test="commodity_identifier!=null and commodity_identifier!=''">
			AND cs.specification_identifier like '%${commodity_identifier}%'
		</if>
		<!--品牌  -->
		<if test="brand!=null and brand!=''">
			AND c.brand like '%${brand}%'
		</if>
		<!--开单部门  -->
		<if test="departmentClassOneId!=null and departmentClassOneId!='' and departmentClassOneId!='-1'">
			AND dk.id='${departmentClassOneId}'
		</if>
		<!--开单人  -->
		<if test="makeOrderPersonId!=null and makeOrderPersonId!='' and makeOrderPersonId!='-1'">
			AND k.identifier='${makeIdentifier}'
		</if>
		<!--时间  -->
		<if test="beginTime!=null and beginTime!=''">
			AND
			so.create_time
			BETWEEN
			'${beginTime}'
			AND
			DATE_ADD('${closeTime}',INTERVAL 1 DAY)
		</if>
		
		<!--仓库  -->
		<if test="warehouseMsgId!=null and warehouseMsgId!='' and warehouseMsgId!=-1">
			AND i.warehouse_id='${warehouseMsgId}'
		</if>	
	</sql>
	
	<!--出库单明细表  -->
	<select id="reportExportSalesOrderDetail" resultMap="BaseResultMap">
		SELECT
			so.identifier, 
			so.order_type,
			so.create_time,
			i.occupied_inventory,
			cs.specification_identifier,
			cs.specification_name,
			c.name cName,
			u.name unName,
			s.name sName,
			c.brand,
			soc.unit_price,
			soc.deliver_goods_num,
			soc.deliver_goods_money,
			soc.return_goods_num,
			soc.remark,
			soc.batch_number,
			c.identifier cIdentifier,
			w.name wName
			FROM
				sales_order_commodity soc
			LEFT JOIN sales_order so ON soc.sales_order_id = so.id
			LEFT JOIN commodity_specification cs ON cs.id = soc.commodity_specification_id
			LEFT JOIN sales_order_reviewer sor ON sor.sales_order_id=so.id
			LEFT JOIN commodity c ON c.id = cs.commodity_id
			LEFT JOIN supcto s ON s.id = so.supcto_id
			LEFT JOIN unit u ON u.specification_id = cs.id and u.basic_unit=1
			LEFT JOIN classification cla ON cla.id=s.classification_id
			LEFT JOIN person k ON k.identifier=so.originator
			LEFT JOIN person r ON r.id=sor.reviewer_id
			LEFT JOIN inventory i ON i.specification_id=cs.id
			
			LEFT JOIN warehouse w ON w.id = i.warehouse_id
			LEFT JOIN department dk ON k.department_id = dk.id
		LEFT JOIN department dr ON r.department_id = dr.id 	
			WHERE
			so.order_type in (3,9)
			and so.state!=37
			<!-- <include refid="query_where_state" /> -->
			<include refid="query_where_base_no_checkperson" />
			GROUP BY
				soc.id
			ORDER BY
				 so.id desc
	</select>
	
	<!--出库单汇总表  -->
	<select id="reportExportSalesOrder" resultMap="BaseResultMap">
		SELECT
			so.identifier, 
			so.order_type,
			so.create_time,
			sum(i.occupied_inventory) occupied_inventory,
			cs.specification_identifier,
			cs.specification_name,
			c.name cName,
			u.name unName,
			s.name sName,
			c.brand,
			soc.unit_price,
			SUM(soc.deliver_goods_num) deliver_goods_num,
			SUM(soc.deliver_goods_money) deliver_goods_money,
			soc.commodity_specification_id,
			soc.return_goods_num,
			soc.remark,
			soc.batch_number,
			c.identifier cIdentifier,
			w.name wName
			FROM
				sales_order_commodity soc
			LEFT JOIN sales_order so ON soc.sales_order_id = so.id
			LEFT JOIN commodity_specification cs ON cs.id = soc.commodity_specification_id
			LEFT JOIN sales_order_reviewer sor ON sor.sales_order_id=so.id
			LEFT JOIN commodity c ON c.id = cs.commodity_id
			LEFT JOIN supcto s ON s.id = so.supcto_id
			LEFT JOIN unit u ON u.specification_id = cs.id and u.basic_unit=1
			LEFT JOIN classification cla ON cla.id=s.classification_id
			LEFT JOIN person k ON k.identifier=so.originator
			LEFT JOIN person r ON r.id=sor.reviewer_id
			LEFT JOIN inventory i ON i.specification_id=cs.id
			
			LEFT JOIN warehouse w ON w.id = i.warehouse_id
			LEFT JOIN department dk ON k.department_id = dk.id
		LEFT JOIN department dr ON r.department_id = dr.id 	
			WHERE
			so.order_type in (3,9)
			and so.state!=37
			<!-- <include refid="query_where_state" /> -->
			<include refid="query_where_base_no_checkperson" />
			GROUP BY
				soc.commodity_specification_id
			ORDER BY
				 so.id desc
	</select>
	
	<!-- 销售订单明细表-按客户 -->
	<select id="reportOrderDetail" resultMap="BaseResultMap">
	SELECT
		so.identifier,
		so.create_time,
		so.is_app_order,
		i.occupied_inventory,
		p.NAME uname,
		c.identifier cIdentifier,
		c.`name` cName,
		cs.specification_name,
		cs.specification_identifier,
		so.is_specimen,
		u.NAME unName,
		s.NAME sName,
		soc.unit_price,
		soc.deliver_goods_num,
		soc.deliver_goods_money,
		soc.remark,
		IFNULL(soc.discount,0) discount,
		p.phone 
	FROM
		sales_order so
		LEFT JOIN sales_order_commodity soc  ON soc.sales_order_id = so.id
		LEFT JOIN commodity_specification cs ON cs.id = soc.commodity_specification_id
		LEFT JOIN sales_order_reviewer sor ON sor.sales_order_id=so.id
		LEFT JOIN commodity c ON c.id = cs.commodity_id
		LEFT JOIN supcto s ON s.id = so.supcto_id
		LEFT JOIN unit u ON u.specification_id = cs.id and u.basic_unit=1
		LEFT JOIN classification cla ON cla.id=s.classification_id
		LEFT JOIN person k ON k.identifier=so.originator
		LEFT JOIN person r ON r.id=sor.reviewer_id
		LEFT JOIN person p ON p.id =so.person_id
		LEFT JOIN inventory i ON i.specification_id=cs.id
		LEFT JOIN department dk ON k.department_id = dk.id
	LEFT JOIN department dr ON r.department_id = dr.id 	
	WHERE
		so.order_type = 1
		and so.state!=37
		
		<include refid="query_where_state" />
		<include refid="query_where_base" />
		
		GROUP BY
		soc.id
		ORDER BY
		 so.id desc
	</select>
	
	<!--销售开单汇总表  -->
	<select id="reportSalesOrderOpenGether" resultMap="BaseResultMap">
	SELECT
		s.name sName,
		s.identifier sIdentifier,
		s.province,
		s.city,
		s.area,
		dr.name departmentName,
		SUM(damS.damage_money ) damage_money,
		SUM( damS.damage_money ) damage_money,
	(SUM(IFNULL(soc.receiving_goods_money,0))) receiving_goods_money,
IFNULL((SELECT sum(sooc.return_goods_num*sooc.unit_price)  FROM  sales_order soo
	LEFT JOIN sales_order_commodity sooc ON sooc.sales_order_id = soo.id 
	WHERE 
 soo.supcto_id=so.supcto_id AND
	soo.order_type=6
	GROUP BY
	soo.supcto_id),0) returnMoney
		FROM
			sales_order_commodity soc
		LEFT JOIN sales_order so ON soc.sales_order_id = so.id
		LEFT JOIN commodity_specification cs ON cs.id = soc.commodity_specification_id
		LEFT JOIN sales_order_reviewer sor ON sor.sales_order_id=so.id and sor.reviewer_type=4
		LEFT JOIN commodity c ON c.id = cs.commodity_id
		LEFT JOIN supcto s ON s.id = so.supcto_id
		LEFT JOIN unit u ON u.specification_id = cs.id and u.basic_unit=1
		LEFT JOIN classification cla ON cla.id=s.classification_id
		LEFT JOIN person k ON k.identifier=so.originator
		LEFT JOIN person r ON r.id=sor.reviewer_id
		LEFT JOIN inventory i ON i.specification_id=cs.id
		LEFT JOIN department dk ON k.department_id = dk.id
		LEFT JOIN department dr ON r.department_id = dr.id 	
		LEFT JOIN (
			SELECT
				soc2.commodity_specification_id,
				soc2.damage_money,
		    so2.parent_id
			FROM
				sales_order_commodity soc2
			LEFT JOIN sales_order so2 ON soc2.sales_order_id = so2.id
			where so2.order_type=4
		 
		) damS on damS.parent_id=so.parent_id and soc.commodity_specification_id=damS.commodity_specification_id
		where so.order_type=2
		<!-- old:(13,14,15,16,17,18,21,22,23) -->
		and so.state in (15,16,17,18,22,23)
		<include refid="query_where_base" />
		
		GROUP BY so.supcto_id 
		ORDER BY
		 so.id desc
	</select>
	
	<!--销售开单明细表  -->
	<select id="reportSalesOrderOpenDetail" resultMap="BaseResultMap">
	SELECT
		so.parent_id,
		so.identifier,
		so.create_time,
		so.summary,
		so.originator,
		i.occupied_inventory,
		u. NAME originatorName,
		r. NAME reviewerName,
		p. NAME uname,
		p.phone,
		
		c.identifier cIdentifier,
		cs.specification_name,
		cs.specification_identifier,
		c. NAME cName,
		un. NAME baseUnitName,
		s. NAME sName,
		s.province,
		s.city,
		s.area,
		dk. NAME departmentName,
		soc.unit_price,
		soc.receiving_goods_num,
		soc.receiving_goods_money,
		soc.taxes,
		IFNULL((soc.receiving_goods_num*soc.unit_price*soc.taxes),0) taxes_money,
		damageTable.damage_money,
		COUNT(DISTINCT soc.id)
	FROM
		sales_order_commodity soc
	LEFT JOIN sales_order so ON soc.sales_order_id = so.id
	LEFT JOIN sales_order_reviewer sor ON sor.sales_order_id = so.id AND sor.reviewer_type=4
	
	LEFT JOIN commodity_specification cs ON cs.id = soc.commodity_specification_id
	LEFT JOIN commodity c ON c.id = cs.commodity_id
	LEFT JOIN unit un ON un.specification_id = cs.id AND un.basic_unit = 1
	LEFT JOIN supcto s ON s.id = so.supcto_id
	LEFT JOIN classification cla ON cla.id=s.classification_id
	LEFT JOIN person P ON p.id = so.person_id
	LEFT JOIN person u ON u.identifier = so.originator
	LEFT JOIN person r ON r.id = sor.reviewer_id
	LEFT JOIN department dk ON u.department_id = dk.id
	LEFT JOIN department dr ON r.department_id = dr.id 	
	LEFT JOIN inventory i ON i.specification_id=cs.id
	LEFT JOIN (
		SELECT
			soc1.damage_money damage_money,
			so1.parent_id parent_id
		FROM
			sales_order_commodity soc1
		LEFT JOIN sales_order so1 ON soc1.sales_order_id = so1.id
		AND so1.order_type = 4
	) damageTable ON damageTable.parent_id = so.parent_id
	WHERE
	<!-- old:(13,14,15,16,17,18,21,22,23) -->
		so.is_show=2 and so.order_type = 2 and so.state in (15,16,17,18,22,23) 
		<!--单号  -->
			<if test="identifier!=null and identifier!=''">
				AND so.identifier like '%${identifier}%'
			</if>
			<!--运输方式  -->
			<if test="shippingModel!=null and shippingModel!='' and shippingModel!=-1">
				AND so.shipping_mode_id='${shippingModel}'
			</if>
			
			<!--客户名称分类  -->
			<if test="supctoTypeClassId!=null and supctoTypeClassId!='' and supctoTypeClassId!=-1">
				AND cla.parent_id='${supctoTypeClassId}'
			</if>
			<!--客户名称一级分类  -->
			<if test="supctoTypeClassTwoId!=null and supctoTypeClassTwoId!='' and supctoTypeClassTwoId!=-1">	
				AND s.classification_id='${supctoTypeClassTwoId}'
			</if>
			<!--客户名称  -->
			<if test="supctoName!=null and supctoName!=''">
				AND s.name  like '%${supctoName}%'
			</if>
			<!--省份  -->
			<if test="province!=null and province!=''">
				AND s.province_code='${province}'
			</if>
			<!--市  -->
			<if test="city!=null and city!=''">
				AND s.city_code='${city}'
			</if>
			<!-- 区 -->
			<if test="area!=null and area!=''">
				AND s.area_code='${area}'
			</if>
			<!--商品名称  -->
			<if test="cname!=null and cname!=''">
				AND c.name like '%${cname}%'
			</if>
			<!-- 商品编码 -->
			<if test="commodity_identifier!=null and commodity_identifier!=''">
				AND cs.specification_identifier like '%${commodity_identifier}%'
			</if>
			<!--品牌  -->
			<if test="brand!=null and brand!=''">
				AND c.brand like '%${brand}%'
			</if>
			<!--开单部门  -->
			<if test="departmentClassOneId!=null and departmentClassOneId!='' and departmentClassOneId!='-1'">
				AND dk.id='${departmentClassOneId}'
			</if>
			<!--开单人  -->
			<if test="makeOrderPersonId!=null and makeOrderPersonId!='' and makeOrderPersonId!='-1'">
				AND u.identifier='${makeIdentifier}'
			</if>
			<!--审核部门  -->
			<if test="checkDepartmentId!=null and checkDepartmentId!='' and checkDepartmentId!='-1'">
				AND dr.id='${checkDepartmentId}'
			</if>
			<!--审核人  -->
			<if test="checkPersonId!=null and checkPersonId!='' and checkPersonId!='-1'">
				AND r.identifier='${rewviewIdentifier}'
			</if>
			<!--时间  -->
			<if test="beginTime!=null and beginTime!=''">
				AND
				so.create_time
				BETWEEN
				'${beginTime}'
				AND
				DATE_ADD('${closeTime}',INTERVAL 1 DAY)
			</if>
			
			<!--仓库  -->
			<if test="warehouseMsgId!=null and warehouseMsgId!='' and warehouseMsgId!=-1">
				AND i.warehouse_id='${warehouseMsgId}'
			</if>
		
	GROUP BY
		soc.id
		ORDER BY
		 so.id desc
	</select>
	
	<!--货品销售日报表  -->
	<select id="reportSalesDayDetais" resultMap="BaseResultMap">
	SELECT
		 so.identifier,
		so.miss_order_id missOrderId,
		i.occupied_inventory,
		SUM(soc.deliver_goods_num) deliver_goods_num,
		SUM(soc.deliver_goods_money) deliver_goods_money,
		c.identifier cIdentifier,
		cs.id csId,
		c.`name` cName,
		cs.specification_name,
		cs.specification_identifier,
		c.brand,
		u.`name` baseUnitName,
		so.create_time,
		SUM(soc.receiving_goods_num) receiving_goods_num,
		SUM(soc.receiving_goods_money)  receiving_goods_money
		
		from 
		sales_order_commodity soc
		LEFT JOIN sales_order so ON soc.sales_order_id = so.id
		LEFT JOIN commodity_specification cs ON cs.id = soc.commodity_specification_id
		LEFT JOIN sales_order_reviewer sor ON sor.sales_order_id=so.id and sor.reviewer_type=4
		LEFT JOIN commodity c ON c.id = cs.commodity_id
		LEFT JOIN supcto s ON s.id = so.supcto_id
		LEFT JOIN unit u ON u.specification_id = cs.id and u.basic_unit=1
		LEFT JOIN classification cla ON cla.id=s.classification_id
		LEFT JOIN person k ON k.identifier=so.originator
		LEFT JOIN person r ON r.id=sor.reviewer_id
		LEFT JOIN inventory i ON i.specification_id=cs.id
		LEFT JOIN department dk ON k.department_id = dk.id
	LEFT JOIN department dr ON r.department_id = dr.id 	
		WHERE 
		so.order_type = 2 
		AND so.state IN (
			15,
			16,
			17,
			18,
			22,
			23 
		) 
		<include refid="query_where_base" />
		GROUP BY cs.id
		ORDER BY so.id ASC
	</select>
	
	<!--销售毛利汇总表  -->
	<select id="reportProfitGether" resultMap="BaseResultMap">
	SELECT 
		s.identifier sIdentifier,
		s.`name` sName,
		soc.unit_price,
		soc.commodity_specification_id,
SUM( soc.receiving_goods_money ) receiving_goods_money,
		IFNULL((SELECT sum(sooc.return_goods_num*sooc.unit_price)  FROM  sales_order soo
	LEFT JOIN sales_order_commodity sooc ON sooc.sales_order_id = soo.id 
	WHERE 
	 soo.supcto_id=so.supcto_id AND
	soo.order_type=6
	GROUP BY
	soo.supcto_id),0) returnMoney,
	IFNULL((SELECT sum(sooc.return_goods_num)  FROM  sales_order soo
	LEFT JOIN sales_order_commodity sooc ON sooc.sales_order_id = soo.id 
	WHERE 
	 soo.supcto_id=so.supcto_id AND
	soo.order_type=6
	GROUP BY
	soo.supcto_id),0) returnNum,
	SUM(soc.receiving_goods_num*u.mini_price) deliver_goods_money,
		 
		SUM(((soc.receiving_goods_money-(soc.receiving_goods_num*u.mini_price))/soc.receiving_goods_money)*100) discount,
		soc.receiving_goods_num,
		
		
		
		cs.id csId,
		cs.specification_identifier,
		s.province,
		s.city,
		s.area,
		u.mini_price,
		dk.name departmentName
		from 
		sales_order_commodity soc
			LEFT JOIN sales_order so ON soc.sales_order_id = so.id
			LEFT JOIN commodity_specification cs ON cs.id = soc.commodity_specification_id
			LEFT JOIN sales_order_reviewer sor ON sor.sales_order_id=so.id and sor.reviewer_type=4
			LEFT JOIN commodity c ON c.id = cs.commodity_id
			LEFT JOIN supcto s ON s.id = so.supcto_id
			LEFT JOIN unit u ON u.specification_id = cs.id and u.basic_unit=1
			LEFT JOIN classification cla ON cla.id=s.classification_id
			LEFT JOIN person k ON k.identifier=so.originator
			LEFT JOIN person r ON r.id=sor.reviewer_id
			LEFT JOIN inventory i ON i.specification_id=cs.id
			LEFT JOIN department dk ON k.department_id = dk.id
		LEFT JOIN department dr ON r.department_id = dr.id 
		<!-- old:(13,14,15,16,17,18,21,22,23) -->	
		WHERE so.is_show=2 and so.order_type = 2 and so.state in (15,16,17,18,22,23) 
		<include refid="query_where_base" />
		GROUP BY s.id
		order by so.id DESC
	</select>
	
	<!-- 销售毛利明细表 -->
	<select id="reportProfitDetail" resultMap="BaseResultMap">
	SELECT 
		so.identifier,
		so.create_time,
		c.`name` cName,
		cs.specification_name,
		cs.specification_identifier,
		u.`name` baseUnitName,
		s.identifier sIdentifier,
		s.`name` sName,
		soc.unit_price,
		(soc.receiving_goods_money/soc.receiving_goods_num) oldUnitPrice,
		soc.receiving_goods_money,
		soc.receiving_goods_num,
		soc.remark,
		cs.id csId,
		s.province,
		s.city,
		s.area,
		u.mini_price,
		dp.NAME departmentName,
		p.`name` uname,
		IFNULL((SELECT sooc.return_goods_num  FROM  sales_order soo
	LEFT JOIN sales_order_commodity sooc ON sooc.sales_order_id = soo.id 
	WHERE 
	soo.parent_id=so.parent_id AND sooc.commodity_specification_id=cs.id AND
	soo.order_type=6
	GROUP BY
	cs.id),0) return_goods_num
		from 
		
		sales_order_commodity soc
			LEFT JOIN sales_order so ON soc.sales_order_id=so.id
			LEFT JOIN commodity_specification cs ON cs.id = soc.commodity_specification_id
			LEFT JOIN sales_order_reviewer sor ON sor.sales_order_id=so.id and sor.reviewer_type=4
			LEFT JOIN commodity c ON c.id = cs.commodity_id
			LEFT JOIN supcto s ON s.id = so.supcto_id
			LEFT JOIN unit u ON u.specification_id = cs.id and u.basic_unit=1
			LEFT JOIN classification cla ON cla.id=s.classification_id
			LEFT JOIN person p ON p.id = so.person_id
			LEFT JOIN person k ON k.identifier=so.originator
			LEFT JOIN person r ON r.id=sor.reviewer_id
			LEFT JOIN inventory i ON i.specification_id=cs.id
			LEFT JOIN department dp ON p.department_id = dp.id
			LEFT JOIN department dk ON k.department_id = dk.id
		LEFT JOIN department dr ON r.department_id = dr.id
		<!-- old:(13,14,15,16,17,18,21,22,23) --> 	
		WHERE so.is_show=2 and so.order_type = 2 and so.state in (15,16,17,18,22,23) 
		<include refid="query_where_base" />
		GROUP BY soc.id
		ORDER BY so.id DESC
	
	</select>
	
	<!-- 销售开单收款情况一览表 部分sql -->
	<select id="reportSalesOpenReceiveMoney" resultMap="BaseResultMap">
	SELECT
		so.parent_id,
		so.order_type,
		so.summary,
		so.identifier,
		so.create_time,
		SUM( soc.deliver_goods_money ) deliver_goods_money,
	(SUM( soc.receiving_goods_money )-IFNULL((SELECT sum(sooc.return_goods_num*sooc.unit_price)  FROM  sales_order soo
	LEFT JOIN sales_order_commodity sooc ON sooc.sales_order_id = soo.id 
	WHERE 
	soo.parent_id=so.parent_id  AND
	soo.order_type=6
	GROUP BY
	soo.parent_id),0)) receiving_goods_money,
	IFNULL((SELECT
			SUM( bs.the_moeny ) 
		FROM
			bills b
			LEFT JOIN bills_sub bs ON b.id = bs.bills_id
		WHERE
			b.bills_type=1
			AND bs.procure_sales_id = so.id 
		GROUP BY
			bs.procure_sales_id ),0)+ IFNULL(
		(
		SELECT
			sum( ws.the_money ) 
		FROM
			writeoff w
			LEFT JOIN writeoff_sub ws ON w.id = ws.writeoff_id 
		WHERE
			w.type IN ( 1, 2, 5, 6 ) 
			AND ws.is_procure_sales = 1 
			AND ws.procure_sales_id = so.id 
		GROUP BY
			ws.procure_sales_id 
		),
		0 
	) returnMoney,
		SUM(soc.taxes_money) taxes_money,
		soc.remark,
		u. NAME originatorName,
		r. NAME reviewerName,
		p. NAME uname,
		p.phone,
		c.identifier cIdentifier,
		cs.specification_name,
		cs.specification_identifier,
		c. NAME cName,
		un. NAME baseUnitName,
		dp.NAME departmentName,
		s.`name` sName,
		COUNT(DISTINCT soc.id)
	FROM
		sales_order_commodity soc
	LEFT JOIN sales_order so ON soc.sales_order_id = so.id
	LEFT JOIN sales_order_reviewer sor ON sor.sales_order_id = so.id
	AND sor.reviewer_type = 4
	LEFT JOIN commodity_specification cs ON cs.id = soc.commodity_specification_id
	LEFT JOIN commodity c ON c.id = cs.commodity_id
	LEFT JOIN unit un ON un.specification_id = cs.id AND un.basic_unit = 1
	LEFT JOIN supcto s ON s.id = so.supcto_id
	LEFT JOIN classification cla ON cla.id=s.classification_id
	LEFT JOIN person p ON p.id = so.person_id
	LEFT JOIN person u ON u.identifier = so.originator
	LEFT JOIN person r ON r.id = sor.reviewer_id
	LEFT JOIN department dp ON p.department_id = dp.id
	LEFT JOIN department dk ON u.department_id = dk.id
	LEFT JOIN department dr ON r.department_id = dr.id
	LEFT JOIN inventory i ON i.specification_id=cs.id 	
	<!-- LEFT JOIN (
		SELECT
			soc1.damage_money damage_money,
			so1.parent_id parent_id
		FROM
			sales_order_commodity soc1
		LEFT JOIN sales_order so1 ON soc1.sales_order_id = so1.id
		AND so1.order_type = 4
	) damageTable ON damageTable.parent_id = so.parent_id -->
	WHERE
	<!-- old:(13,14,15,16,17,18,21,22,23) -->
		so.is_show=2 and so.order_type IN(2,6)  and so.state in (15,16,17,18,22,23) 
		<!--单号  -->
			<if test="identifier!=null and identifier!=''">
				AND so.identifier like '%${identifier}%'
			</if>
			<!--运输方式  -->
			<if test="shippingModel!=null and shippingModel!='' and shippingModel!=-1">
				AND so.shipping_mode_id='${shippingModel}'
			</if>
			
			<!--客户名称分类  -->
			<if test="supctoTypeClassId!=null and supctoTypeClassId!='' and supctoTypeClassId!=-1">
				AND cla.parent_id='${supctoTypeClassId}'
			</if>
			<!--客户名称一级分类  -->
			<if test="supctoTypeClassTwoId!=null and supctoTypeClassTwoId!='' and supctoTypeClassTwoId!=-1">			
				AND s.classification_id='${supctoTypeClassTwoId}'
			</if>
			<!--客户名称  -->
			<if test="supctoName!=null and supctoName!=''">
				AND s.name  like '%${supctoName}%'
			</if>
			<!--省份  -->
			<if test="province!=null and province!=''">
				AND s.province_code='${province}'
			</if>
			<!--市  -->
			<if test="city!=null and city!=''">
				AND s.city_code='${city}'
			</if>
			<!-- 区 -->
			<if test="area!=null and area!=''">
				AND s.area_code='${area}'
			</if>
			<!--商品名称  -->
			<if test="cname!=null and cname!=''">
				AND c.name like '%${cname}%'
			</if>
			<!-- 商品编码 -->
			<if test="commodity_identifier!=null and commodity_identifier!=''">
				AND cs.specification_identifier like '%${commodity_identifier}%'
			</if>
			<!--品牌  -->
			<if test="brand!=null and brand!=''">
				AND c.brand like '%${brand}%'
			</if>
			<!--开单部门  -->
			<if test="departmentClassOneId!=null and departmentClassOneId!='' and departmentClassOneId!='-1'">
				AND dk.id='${departmentClassOneId}'
			</if>
			<!--开单人  -->
			<if test="makeOrderPersonId!=null and makeOrderPersonId!='' and makeOrderPersonId!='-1'">
				AND u.identifier='${makeIdentifier}'
			</if>
			<!--审核部门  -->
			<if test="checkDepartmentId!=null and checkDepartmentId!='' and checkDepartmentId!='-1'">
				AND dr.id='${checkDepartmentId}'
			</if>
			<!--审核人  -->
			<if test="checkPersonId!=null and checkPersonId!='' and checkPersonId!='-1'">
				AND r.identifier='${rewviewIdentifier}'
			</if>
			<!--时间  -->
			<if test="beginTime!=null and beginTime!=''">
				AND
				so.create_time
				BETWEEN
				'${beginTime}'
				AND
				DATE_ADD('${closeTime}',INTERVAL 1 DAY)
			</if>
			
			<!--仓库  -->
			<if test="warehouseMsgId!=null and warehouseMsgId!='' and warehouseMsgId!=-1">
				AND i.warehouse_id='${warehouseMsgId}'
			</if>
		
	GROUP BY
		soc.sales_order_id	
	</select>
	
	<update id="updateByVerification" >
		update sales_order set is_verification=1
		where id=#{id}
	</update>
	
	<!--应收账款汇总表 基础信息（客户、预收款、合计应收款）  -->	
	<select id="reportGetMoneyGetherOne" resultMap="BaseResultMap">
	SELECT 
		s.id sId,
		s.identifier sIdentifier,
		s.`name` sName,
		SUM(so.advance_scale) advance_scale,
		SUM(soc.receiving_goods_money) receiving_goods_money
		FROM 
		sales_order_commodity soc
			LEFT JOIN sales_order so ON soc.sales_order_id = so.id
			LEFT JOIN commodity_specification cs ON cs.id = soc.commodity_specification_id
			LEFT JOIN sales_order_reviewer sor ON sor.sales_order_id=so.id
			LEFT JOIN commodity c ON c.id = cs.commodity_id
			LEFT JOIN supcto s ON s.id = so.supcto_id
			LEFT JOIN unit u ON u.specification_id = cs.id and u.basic_unit=1
			LEFT JOIN classification cla ON cla.id=s.classification_id
			LEFT JOIN person k ON k.identifier=so.originator
			LEFT JOIN person r ON r.id=sor.reviewer_id
			LEFT JOIN inventory i ON i.specification_id=cs.id
			LEFT JOIN department dk ON k.department_id = dk.id
		LEFT JOIN department dr ON r.department_id = dr.id 	
		WHERE
		<!-- old:(13,14,15,16,17,18,21,22,23) -->
		so.order_type = 2 and so.state in (15,16,17,18,22,23)
		<include refid="query_where_base"/>
		GROUP BY s.id
	
	</select>
	
	<!-- 全部应收款金额 -->
	<select id="reportGetMoneyGetherTwo" resultMap="BaseResultMap">
	SELECT 
		s.id sId,
		SUM(soc.receiving_goods_money) advance_scale
		FROM 
		sales_order_commodity soc
			LEFT JOIN sales_order so ON soc.sales_order_id = so.id
			LEFT JOIN commodity_specification cs ON cs.id = soc.commodity_specification_id
			LEFT JOIN sales_order_reviewer sor ON sor.sales_order_id=so.id
			LEFT JOIN commodity c ON c.id = cs.commodity_id
			LEFT JOIN supcto s ON s.id = so.supcto_id
			LEFT JOIN unit u ON u.specification_id = cs.id and u.basic_unit=1
			LEFT JOIN classification cla ON cla.id=s.classification_id
			LEFT JOIN person k ON k.identifier=so.originator
			LEFT JOIN person r ON r.id=sor.reviewer_id
			LEFT JOIN inventory i ON i.specification_id=cs.id
			LEFT JOIN department dk ON k.department_id = dk.id
			LEFT JOIN department dr ON r.department_id = dr.id 	
		WHERE
		so.order_type = 6
		and so.state!=37
		<include refid="query_where_base" />
		GROUP BY s.id
	</select>
	
	<!-- 起始日期的 应收款金额 -->
	<select id="reportGetMoneyGetherThree" resultMap="BaseResultMap">
	SELECT 
		s.id sId,
		SUM(soc.receiving_goods_money) advance_scale
		
	FROM sales_order so
	LEFT JOIN sales_order_commodity soc on soc.sales_order_id=so.id
	LEFT JOIN supcto s ON s.id=so.supcto_id
	WHERE
	<!-- old：(13,14,15,16,17,18,21,22,23) -->
	so.order_type = 2 and so.state in (15,16,17,18,22,23) AND  so.create_time LIKE '%${beginTime}%'
	GROUP BY s.id
	
	</select>
	
	
	<!--账面库存汇总表  -->
	
	<select id="reportAccountsGetherOne"  resultMap="BaseResultMap">
	
	</select>
		
	
	
	<!--修改销售订单的收货人相关信息  -->
	<update id="updateByMisOrderIdSelective" parameterType="com.jl.psi.model.SalesOrder">
		update sales_order
		<set>
			<if test="parentId != null">
				parent_id = #{parentId,jdbcType=INTEGER},
			</if>
			<if test="identifier != null">
				identifier = #{identifier,jdbcType=VARCHAR},
			</if>
			<if test="breakCode != null">
				break_code = #{breakCode,jdbcType=VARCHAR},
			</if>
			<if test="payment != null">
				payment = #{payment,jdbcType=INTEGER},
			</if>
			<if test="orderType != null">
				order_type = #{orderType,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="endValidityTime != null">
				end_validity_time = #{endValidityTime,jdbcType=DATE},
			</if>
			<if test="deliverGoodsPlace != null">
				deliver_goods_place =
				#{deliverGoodsPlace,jdbcType=VARCHAR},
			</if>
			<if test="receiptGoodsPlace != null">
				receipt_goods_place =
				#{receiptGoodsPlace,jdbcType=VARCHAR},
			</if>
			<if test="consignee != null">
				consignee = #{consignee,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				phone = #{phone,jdbcType=VARCHAR},
			</if>
			<if test="fax != null">
				fax = #{fax,jdbcType=VARCHAR},
			</if>
			<if test="orderer != null">
				orderer = #{orderer,jdbcType=VARCHAR},
			</if>
			<if test="advanceScale != null">
				advance_scale = #{advanceScale,jdbcType=DOUBLE},
			</if>
			<if test="originator != null">
				originator = #{originator,jdbcType=VARCHAR},
			</if>
			<if test="summary != null">
				summary = #{summary,jdbcType=VARCHAR},
			</if>
			<if test="branch != null">
				branch = #{branch,jdbcType=VARCHAR},
			</if>
			<if test="state != null">
				state = #{state,jdbcType=INTEGER},
			</if>
			<if test="isSpecimen != null">
				is_specimen = #{isSpecimen,jdbcType=INTEGER},
			</if>
			<if test="supctoId != null">
				supcto_id = #{supctoId,jdbcType=INTEGER},
			</if>
			<if test="shippingModeId != null">
				shipping_mode_id = #{shippingModeId,jdbcType=INTEGER},
			</if>
			<if test="personId != null">
				person_id = #{personId,jdbcType=INTEGER},
			</if>
			<if test="salesPlanOrderId != null">
				sales_plan_order_id =
				#{salesPlanOrderId,jdbcType=INTEGER},
			</if>
			<if test="printNum != null">
				print_num = #{printNum,jdbcType=INTEGER},
			</if>
			<if test="isShow != null">
				is_show = #{isShow,jdbcType=INTEGER},
			</if>
			<if test="isReturnGoods != null">
				is_return_goods = #{isReturnGoods,jdbcType=INTEGER},
			</if>
		</set>
		where miss_order_id = #{missOrderId,jdbcType=INTEGER}
	</update>
	
	<!-- 根据missid列表更改状态 -->
	<update id="updateStateByMisId" >
		update sales_order set state =33 , app_send_time= NOW() where id=#{id}
		
	</update>
	
	<update id="updateStateByParentId">
		update sales_order set state =33 , app_send_time= NOW() where id=#{parentId}
	</update>
	
	<!--引用出库单页面查询返货数量与折损数量  -->
	<select id="getReturnNum"  resultMap="BaseResultMap">
		SELECT
		so.id,
		soc.return_goods_num,
		soc.id socId
		FROM
		sales_order so
		LEFT JOIN sales_order_commodity soc ON so.id=soc.sales_order_id
		WHERE so.order_type=5 AND so.parent_id=#{parentId};
		
		 
	</select>
	
	<select id="getDamageNum"  resultMap="BaseResultMap">
		SELECT 
		so.id,
		soc.damage_num damage_num
		FROM
		sales_order so
		LEFT JOIN sales_order_commodity soc ON so.id=soc.sales_order_id
		WHERE so.order_type=4 AND so.parent_id=#{parentId}
	</select>
	
	
	<!--表报查询条件  -->
	<sql id="query_where_base_no_shipping_mode">
	  	<!--单号  -->
		<if test="identifier!=null and identifier!=''">
			AND so.identifier like '%${identifier}%'
		</if>
		<!--商品名称  -->
		<if test="cname!=null and cname!=''">
			AND c.name like '%${cname}%'
		</if>
		<!-- 商品编码 -->
		<if test="commodity_identifier!=null and commodity_identifier!=''">
			AND cs.specification_identifier like '%${commodity_identifier}%'
		</if>
		<!--品牌  -->
		<if test="brand!=null and brand!=''">
			AND c.brand like '%${brand}%'
		</if>
		<!--开单部门  -->
		<if test="departmentClassOneId!=null and departmentClassOneId!='' and departmentClassOneId!='-1'">
			AND dk.id='${departmentClassOneId}'
		</if>
		<!--开单人  -->
		<if test="makeOrderPersonId!=null and makeOrderPersonId!='' and makeOrderPersonId!='-1'">
			AND k.identifier='${makeIdentifier}'
		</if>
		<!--审核部门  -->
		<if test="checkDepartmentId!=null and checkDepartmentId!='' and checkDepartmentId!='-1'">
			AND dr.id='${checkDepartmentId}'
		</if>
		<!--审核人  -->
		<if test="checkPersonId!=null and checkPersonId!='' and checkPersonId!='-1'">
			AND r.identifier='${rewviewIdentifier}'
		</if>
		<!--时间  -->
		<if test="beginTime!=null and beginTime!=''">
			AND
			so.create_time
			BETWEEN
			'${beginTime}'
			AND
			DATE_ADD('${closeTime}',INTERVAL 1 DAY)
		</if>
		
		<!--仓库  -->
		<if test="warehouseMsgId!=null and warehouseMsgId!='' and warehouseMsgId!=-1">
			AND i.warehouse_id='${warehouseMsgId}'
		</if>
	</sql>
	
	<!-- 其他发货单报表sql -->
	<select id="reportOtherDeliverOrder"  resultMap="BaseResultMap">
	SELECT
		so.identifier,
		cs.specification_identifier,
		cs.specification_name,
		i.occupied_inventory,
		c.`name` cName,
		c.brand,
		so.create_time,
		u.`name` baseUnitName,
		soc.deliver_goods_num,
		soc.unit_price,
		soc.deliver_goods_money,
		soc.remark,
		soc.batch_number
	FROM
		sales_order_commodity soc
		LEFT JOIN sales_order so ON soc.sales_order_id = so.id
		LEFT JOIN commodity_specification cs ON cs.id = soc.commodity_specification_id
		LEFT JOIN sales_order_reviewer sor ON sor.sales_order_id=so.id
		LEFT JOIN commodity c ON c.id = cs.commodity_id
		LEFT JOIN supcto s ON s.id = so.supcto_id
		LEFT JOIN unit u ON u.specification_id = cs.id and u.basic_unit=1
		LEFT JOIN classification cla ON cla.id=s.classification_id
		LEFT JOIN person k ON k.identifier=so.originator
		LEFT JOIN person r ON r.id=sor.reviewer_id
		LEFT JOIN inventory i ON i.specification_id=cs.id
		LEFT JOIN department dk ON k.department_id = dk.id
		LEFT JOIN department dr ON r.department_id = dr.id 	
	WHERE
		so.is_show = 2 
		AND so.order_type = 8
		and so.state!=37
		<include refid="query_where_base_no_shipping_mode" />
		<include refid="query_where_state" />
		
	GROUP BY
	soc.id
	ORDER BY
		identifier DESC
	</select>
	<!--销售退货商品信息（入库单部分）  -->
	<select id="reportReturnGoodsMsg"  resultMap="BaseResultMap">
		SELECT
		so.identifier,
		cs.specification_identifier,
		cs.specification_name,
		w.`name` wName,
		
		c.`name` cName,
		c.brand,
		so.create_time,
		u.`name` baseUnitName,
		soc.batch_number,
		cs.id csId,
		
		soc.unit_price,
		<if test="type==1">
		sum(i.occupied_inventory) occupied_inventory,
		sum(soc.return_goods_num) return_goods_num,
		sum(soc.return_goods_num*soc.unit_price) deliver_goods_money,
		</if>
		<if test="type==2">
		i.occupied_inventory,
		soc.return_goods_num,
		(soc.return_goods_num*soc.unit_price) deliver_goods_money,
		</if>
		soc.remark
	FROM
		sales_order_commodity soc
		LEFT JOIN sales_order so ON soc.sales_order_id = so.id
		LEFT JOIN commodity_specification cs ON cs.id = soc.commodity_specification_id
		LEFT JOIN sales_order_reviewer sor ON sor.sales_order_id=so.id
		LEFT JOIN commodity c ON c.id = cs.commodity_id
		LEFT JOIN supcto s ON s.id = so.supcto_id
		LEFT JOIN unit u ON u.specification_id = cs.id and u.basic_unit=1
		LEFT JOIN classification cla ON cla.id=s.classification_id
		LEFT JOIN person k ON k.identifier=so.originator
		LEFT JOIN person r ON r.id=sor.reviewer_id
		LEFT JOIN inventory i ON i.specification_id=cs.id
		LEFT JOIN department dk ON k.department_id = dk.id
		LEFT JOIN department dr ON r.department_id = dr.id
		LEFT JOIN warehouse w ON w.id=i.warehouse_id 
	WHERE
		so.is_show = 2 
		AND so.order_type = 6 
		AND so.state IN ( 30, 31 ) 
		<!--单号  -->
		<if test="identifier!=null and identifier!=''">
			AND so.identifier like '%${identifier}%'
		</if>
		<!--运输方式  -->
		<if test="shippingModel!=null and shippingModel!='' and shippingModel!=-1">
			AND so.shipping_mode_id='${shippingModel}'
		</if>
		
		
		<!--商品名称  -->
		<if test="cname!=null and cname!=''">
			AND c.name like '%${cname}%'
		</if>
		<!-- 商品编码 -->
		<if test="commodity_identifier!=null and commodity_identifier!=''">
			AND cs.specification_identifier like '%${commodity_identifier}%'
		</if>
		<!--品牌  -->
		<if test="brand!=null and brand!=''">
			AND c.brand like '%${brand}%'
		</if>
		<!--开单部门  -->
		<if test="departmentClassOneId!=null and departmentClassOneId!='' and departmentClassOneId!='-1'">
			AND dk.id='${departmentClassOneId}'
		</if>
		<!--开单人  -->
		<if test="makeOrderPersonId!=null and makeOrderPersonId!='' and makeOrderPersonId!='-1'">
			AND k.identifier='${makeIdentifier}'
		</if>
		
		<!--时间  -->
		<if test="beginTime!=null and beginTime!=''">
			AND
			so.create_time
			BETWEEN
			'${beginTime}'
			AND
			DATE_ADD('${closeTime}',INTERVAL 1 DAY)
		</if>
		
		<!--仓库  -->
		<if test="warehouseMsgId!=null and warehouseMsgId!='' and warehouseMsgId!=-1">
			AND i.warehouse_id='${warehouseMsgId}'
		</if>
		<!-- <include refid="query_where_state" /> -->
		
	GROUP BY
	<if test="type==1">
	cs.id
	</if>
	<if test="type==2">
	soc.id
	</if>
	
	
	</select>
	<select id="reportSalesOrderReturnDetail"  resultMap="BaseResultMap">
	SELECT
	so.parent_id,
	so.identifier,
	so.create_time,
	so.summary,
	so.originator,
	i.occupied_inventory,
	u.NAME originatorName,
	r.NAME reviewerName,
	p.NAME uname,
	p.phone,
	c.identifier cIdentifier,
	cs.specification_name,
	cs.specification_identifier,
	c.NAME cName,
	un.NAME baseUnitName,
	s.NAME sName,
	s.province,
	s.city,
	s.area,
	dk.NAME departmentName,
	soc.unit_price,
	soc.return_goods_num,
	<if test="type==1">
	sum(soc.return_goods_num*soc.unit_price) returnMoney,
	IFNULL(
		(
		SELECT
			SUM( bs.the_moeny ) 
		FROM
			bills b
			LEFT JOIN bills_sub bs ON b.id = bs.bills_id
		WHERE
			b.bills_type=1
			AND bs.procure_sales_id = so.id 
		GROUP BY
			bs.procure_sales_id 
		),
		0 
	)+IFNULL((SELECT
	
	sum(ws.the_money)
	
FROM
	writeoff w
	LEFT JOIN writeoff_sub ws ON w.id=ws.writeoff_id
	
WHERE
	w.type IN(1,2,5,6)  
	AND ws.is_procure_sales=1
	AND ws.procure_sales_id=so.id
GROUP BY
ws.procure_sales_id),0) receiving_goods_money,
	</if>
	IFNULL(soc.taxes,0)  taxes,
	IFNULL(soc.taxes_money,0) taxes_money,
	IFNULL(soc.remark,"")	remark
	
		FROM
			sales_order so
			LEFT JOIN sales_order_commodity soc ON soc.sales_order_id = so.id
			LEFT JOIN sales_order_reviewer sor ON sor.sales_order_id = so.id 
			LEFT JOIN commodity_specification cs ON cs.id = soc.commodity_specification_id
			LEFT JOIN commodity c ON c.id = cs.commodity_id
			LEFT JOIN unit un ON un.specification_id = cs.id 
			AND un.basic_unit = 1
			LEFT JOIN supcto s ON s.id = so.supcto_id
			LEFT JOIN classification cla ON cla.id = s.classification_id
			LEFT JOIN person P ON p.id = so.person_id
			LEFT JOIN person u ON u.identifier = so.originator
			LEFT JOIN person r ON r.id = sor.reviewer_id
			LEFT JOIN department dk ON u.department_id = dk.id
			LEFT JOIN department dr ON r.department_id = dr.id
			LEFT JOIN inventory i ON i.specification_id = cs.id	
		WHERE
			
			 so.order_type = 6 
			 <!--单号  -->
			<if test="identifier!=null and identifier!=''">
				AND so.identifier like '%${identifier}%'
			</if>
			<!--运输方式  -->
			<if test="shippingModel!=null and shippingModel!='' and shippingModel!=-1">
				AND so.shipping_mode_id='${shippingModel}'
			</if>
			
			<!--客户名称分类  -->
			<if test="supctoTypeClassId!=null and supctoTypeClassId!='' and supctoTypeClassId!=-1">
				AND cla.parent_id='${supctoTypeClassId}'
			</if>
			<!--客户名称一级分类  -->
			<if test="supctoTypeClassTwoId!=null and supctoTypeClassTwoId!='' and supctoTypeClassTwoId!=-1">	
				AND s.classification_id='${supctoTypeClassTwoId}'
			</if>
			<!--客户名称  -->
			<if test="supctoName!=null and supctoName!=''">
				AND s.name  like '%${supctoName}%'
			</if>
			<!--省份  -->
			<if test="province!=null and province!=''">
				AND s.province_code='${province}'
			</if>
			<!--市  -->
			<if test="city!=null and city!=''">
				AND s.city_code='${city}'
			</if>
			<!-- 区 -->
			<if test="area!=null and area!=''">
				AND s.area_code='${area}'
			</if>
			<!--商品名称  -->
			<if test="cname!=null and cname!=''">
				AND c.name like '%${cname}%'
			</if>
			<!-- 商品编码 -->
			<if test="commodity_identifier!=null and commodity_identifier!=''">
				AND cs.specification_identifier like '%${commodity_identifier}%'
			</if>
			<!--品牌  -->
			<if test="brand!=null and brand!=''">
				AND c.brand like '%${brand}%'
			</if>
			<!--开单部门  -->
			<if test="departmentClassOneId!=null and departmentClassOneId!='' and departmentClassOneId!='-1'">
				AND dk.id='${departmentClassOneId}'
			</if>
			<!--开单人  -->
			<if test="makeOrderPersonId!=null and makeOrderPersonId!='' and makeOrderPersonId!='-1'">
				AND u.identifier='${makeIdentifier}'
			</if>
			<!--审核部门  -->
			<if test="checkDepartmentId!=null and checkDepartmentId!='' and checkDepartmentId!='-1'">
				AND dr.id='${checkDepartmentId}'
			</if>
			<!--审核人  -->
			<if test="checkPersonId!=null and checkPersonId!='' and checkPersonId!='-1'">
				AND r.identifier='${rewviewIdentifier}'
			</if>
			<!--时间  -->
			<if test="beginTime!=null and beginTime!=''">
				AND
				so.create_time
				BETWEEN
				'${beginTime}'
				AND
				DATE_ADD('${closeTime}',INTERVAL 1 DAY)
			</if>
			
			<!--仓库  -->
			<if test="warehouseMsgId!=null and warehouseMsgId!='' and warehouseMsgId!=-1">
				AND i.warehouse_id='${warehouseMsgId}'
			</if>
			<if test="type==1">
			GROUP BY
			so.id 
			</if>
			<if test="type==2">
			GROUP BY
			soc.id 
			</if>
		
	</select>
	
</mapper>