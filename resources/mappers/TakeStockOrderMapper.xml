<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jl.psi.mapper.TakeStockOrderMapper">
  <resultMap id="BaseResultMap" type="com.jl.psi.model.TakeStockOrder">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="take_stock_date" jdbcType="TIMESTAMP" property="takeStockDate" />
    <result column="identifier" jdbcType="VARCHAR" property="identifier" />
    <result column="warehouse_id" jdbcType="INTEGER" property="warehouseId" />
    <result column="person_id" jdbcType="INTEGER" property="personId" />
    <result column="originator" jdbcType="VARCHAR" property="originator" />
    <result column="finance_reviewer" jdbcType="VARCHAR" property="financeReviewer" />
    <result column="manager_reviewer" jdbcType="VARCHAR" property="managerReviewer" />
    <result column="summary" jdbcType="VARCHAR" property="summary" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="print_num" jdbcType="INTEGER" property="printNum" />
    
    <result column="wName" jdbcType="VARCHAR" property="warehouseName" />
    <result column="uName" jdbcType="VARCHAR" property="originatorName" />
    <result column="financeReviewerName" jdbcType="VARCHAR" property="financeReviewerName" />
    <result column="managerReviewerName" jdbcType="VARCHAR" property="managerReviewerName" />
    <result column="personName" jdbcType="VARCHAR" property="personName" />
    <result column="personIdentifier" jdbcType="VARCHAR" property="personIdentifier" />
    <result column="departmentName" jdbcType="VARCHAR" property="departmentName" />
    <result column="departmentId" jdbcType="INTEGER" property="departmentId" />
   <result column="is_delete" jdbcType="INTEGER" property="isDelete" />
    <association property="inventory" javaType="com.jl.psi.model.Inventory"
		resultMap="InventoryResultMap" />
    <collection property="takeStockOrderCommodities" ofType="com.jl.psi.model.TakeStockOrderCommodity"
			resultMap="TakeStockOrderCommodityResultMap" />
  </resultMap>
  <!-- 库存信息 -->
	<resultMap id="InventoryResultMap" type="com.jl.psi.model.Inventory">
		<id column="inId" jdbcType="INTEGER" property="id" />
		<result column="inSpecificationId" jdbcType="INTEGER" property="specificationId" />
		<result column="warehouse_id" jdbcType="INTEGER" property="warehouseId" />
		<result column="inventory" jdbcType="INTEGER" property="inventory" />
		<result column="presell_inventory" jdbcType="INTEGER" property="presellInventory" />
		<result column="occupied_inventory" jdbcType="INTEGER"
			property="occupiedInventory" />
		<result column="max_inventory" jdbcType="INTEGER" property="maxInventory" />
		<result column="mini_inventory" jdbcType="INTEGER" property="miniInventory" />
		<result column="cost_price" jdbcType="DOUBLE" property="costPrice" />
		<result column="commodity_num" jdbcType="INTEGER" property="commodityNum" />
		
	</resultMap>
  <!-- 盘点单商品ResultMap -->
  <resultMap id="TakeStockOrderCommodityResultMap" type="com.jl.psi.model.TakeStockOrderCommodity">
  	<id column="tsocId" jdbcType="INTEGER" property="id" />
  	<result column="commodity_specification_id" jdbcType="INTEGER" property="commoditySpecificationId" />
    <result column="inventory_num" jdbcType="INTEGER" property="inventoryNum" />
    <result column="real_num" jdbcType="INTEGER" property="realNum" />
    <result column="profit_or_loss_num" jdbcType="INTEGER" property="profitOrLossNum" />
    <result column="unit_price" jdbcType="DOUBLE" property="unitPrice" />
    <result column="money" jdbcType="DOUBLE" property="money" />
    <association property="commoditySpecification"
			javaType="com.jl.psi.model.CommoditySpecification" resultMap="CommoditySpecificationResultMap" />
  </resultMap>
  <!-- 商品规格信息 -->
  <resultMap id="CommoditySpecificationResultMap" type="com.jl.psi.model.CommoditySpecification">
		<result column="specification_identifier" jdbcType="VARCHAR"
			property="specificationIdentifier" />
		<result column="specification_name" jdbcType="VARCHAR"
			property="specificationName" />
		<result column="baseUnitName" jdbcType="VARCHAR" property="baseUnitName" />
		<result column="barCode" jdbcType="VARCHAR" property="barCode" />
		<association property="commodity" javaType="com.jl.psi.model.Commodity"
			resultMap="CommodityResultMap" />
			<collection property="units" ofType="com.jl.psi.model.Unit" resultMap="unitMapping"/>
  </resultMap>
  <!-- 商品信息 -->
  <resultMap id="CommodityResultMap" type="com.jl.psi.model.Commodity">
		<result column="cName" jdbcType="VARCHAR" property="name" />
		<result column="cIdentifier" jdbcType="VARCHAR" property="identifier" />
		<result column="brand" jdbcType="VARCHAR" property="brand" />
  </resultMap>
  <!--单位信息  -->
  <resultMap id="unitMapping" type="com.jl.psi.model.Unit">
		<result column="uName" jdbcType="VARCHAR" property="name" />
		<result column="mini_price" jdbcType="DOUBLE" property="miniPrice" />
  </resultMap>
  
  <sql id="Base_Column_List">
    id, take_stock_date, identifier, warehouse_id, person_id, originator, finance_reviewer, 
    manager_reviewer, summary, state, print_num,is_delete
  </sql>
   <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from take_stock_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <update id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    update  take_stock_order set  is_delete=1
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="insert" parameterType="com.jl.psi.model.TakeStockOrder">
    insert into take_stock_order (id, take_stock_date, identifier, 
      warehouse_id, person_id, originator, 
      finance_reviewer, manager_reviewer, summary, 
      state, print_num,is_delete)
    values (#{id,jdbcType=INTEGER}, #{takeStockDate,jdbcType=TIMESTAMP}, #{identifier,jdbcType=VARCHAR}, 
      #{warehouseId,jdbcType=INTEGER}, #{personId,jdbcType=INTEGER}, #{originator,jdbcType=VARCHAR}, 
      #{financeReviewer,jdbcType=VARCHAR}, #{managerReviewer,jdbcType=VARCHAR}, #{summary,jdbcType=VARCHAR}, 
      #{state,jdbcType=INTEGER}, #{printNum,jdbcType=INTEGER}, #{isDelete,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.jl.psi.model.TakeStockOrder"
  useGeneratedKeys="true" keyProperty="id">
    insert into take_stock_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="takeStockDate != null">
        take_stock_date,
      </if>
      <if test="identifier != null">
        identifier,
      </if>
      <if test="warehouseId != null">
        warehouse_id,
      </if>
      <if test="personId != null">
        person_id,
      </if>
      <if test="originator != null">
        originator,
      </if>
      <if test="financeReviewer != null">
        finance_reviewer,
      </if>
      <if test="managerReviewer != null">
        manager_reviewer,
      </if>
      <if test="summary != null">
        summary,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="printNum != null">
        print_num,
      </if>
        <if test="isDelete != null">
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="takeStockDate != null">
        #{takeStockDate,jdbcType=TIMESTAMP},
      </if>
      <if test="identifier != null">
        #{identifier,jdbcType=VARCHAR},
      </if>
      <if test="warehouseId != null">
        #{warehouseId,jdbcType=INTEGER},
      </if>
      <if test="personId != null">
        #{personId,jdbcType=INTEGER},
      </if>
      <if test="originator != null">
        #{originator,jdbcType=VARCHAR},
      </if>
      <if test="financeReviewer != null">
        #{financeReviewer,jdbcType=VARCHAR},
      </if>
      <if test="managerReviewer != null">
        #{managerReviewer,jdbcType=VARCHAR},
      </if>
      <if test="summary != null">
        #{summary,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="printNum != null">
        #{printNum,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jl.psi.model.TakeStockOrder">
    update take_stock_order
    <set>
      <if test="takeStockDate != null">
        take_stock_date = #{takeStockDate,jdbcType=TIMESTAMP},
      </if>
      <if test="identifier != null">
        identifier = #{identifier,jdbcType=VARCHAR},
      </if>
      <if test="warehouseId != null">
        warehouse_id = #{warehouseId,jdbcType=INTEGER},
      </if>
      <if test="personId != null">
        person_id = #{personId,jdbcType=INTEGER},
      </if>
      <if test="originator != null">
        originator = #{originator,jdbcType=VARCHAR},
      </if>
      <if test="financeReviewer != null">
        finance_reviewer = #{financeReviewer,jdbcType=VARCHAR},
      </if>
      <if test="managerReviewer != null">
        manager_reviewer = #{managerReviewer,jdbcType=VARCHAR},
      </if>
      <if test="summary != null">
        summary = #{summary,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="printNum != null">
        print_num = #{printNum,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jl.psi.model.TakeStockOrder">
    update take_stock_order
    set take_stock_date = #{takeStockDate,jdbcType=TIMESTAMP},
      identifier = #{identifier,jdbcType=VARCHAR},
      warehouse_id = #{warehouseId,jdbcType=INTEGER},
      person_id = #{personId,jdbcType=INTEGER},
      originator = #{originator,jdbcType=VARCHAR},
      finance_reviewer = #{financeReviewer,jdbcType=VARCHAR},
      manager_reviewer = #{managerReviewer,jdbcType=VARCHAR},
      summary = #{summary,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      print_num = #{printNum,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- 获取最大的编号 -->
	<select id="selectMaxIdentifier" resultType="java.lang.String">
		select MAX(identifier) from take_stock_order 
	</select>
  
  	<!-- 根据id列表更改状态 -->
	<update id="updateStateByIds" parameterType="java.util.Map">
		update take_stock_order 
		<set>
			<if test="financeReviewer != null">
	        	finance_reviewer = #{financeReviewer,jdbcType=VARCHAR},
	        </if>
	        <if test="managerReviewer != null">
	        	manager_reviewer = #{managerReviewer,jdbcType=VARCHAR},
	        </if>
	        <if test="state != null">
		        state = #{state,jdbcType=INTEGER},
		    </if>
		</set>
		where id in (
		<foreach collection="ids" item="item" index="index" separator=",">
			#{item}
		</foreach>
		)
	</update>
	<!-- 根据主键id列表获取盘点单列表 -->
	<select id="getTakeStockOrderByIds" parameterType="java.util.List"
		resultMap="BaseResultMap">
		select * from take_stock_order where id in (
		<foreach collection="list" item="item" separator=",">
			#{item}
		</foreach>
		)

	</select>
  <!-- 根据主键id查询详情 -->
  	<select id="selectTakeStockOrderDetailById" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
			SELECT
					tso.id,
					tso.take_stock_date,
					tso.identifier,
					tso.summary,
					tso.originator,
					tso.finance_reviewer,
					tso.manager_reviewer,
					tso.state,
					tso.person_id,
					tso.warehouse_id,
					w.name wName,
					u.name uName,
					tsoc.id tsocId,
					tsoc.commodity_specification_id,
					tsoc.inventory_num,
					tsoc.real_num,
					tsoc.profit_or_loss_num,
					tsoc.unit_price,
					tsoc.money,
					cs.specification_identifier,
					cs.specification_name,
					c.name cName,
					c.brand,
					un.name baseUnitName,
					un.bar_code barCode,
					p.identifier personIdentifier,
					p.name personName,
					d.name departmentName,
					d.id departmentId,  
					fr.name financeReviewerName,
					mr.name managerReviewerName
					
			FROM
					take_stock_order tso
				LEFT JOIN take_stock_order_commodity tsoc on tsoc.take_stock_order_id = tso.id
				LEFT JOIN commodity_specification cs on tsoc.commodity_specification_id = cs.id
				LEFT JOIN commodity c on cs.commodity_id = c.id 
				LEFT JOIN unit un ON un.specification_id = cs.id AND un.basic_unit = 1
				LEFT JOIN person u on u.identifier = tso.originator
				LEFT JOIN person fr on fr.identifier = tso.finance_reviewer
				LEFT JOIN person mr on mr.identifier = tso.manager_reviewer
				LEFT JOIN person p on p.id = tso.person_id
				LEFT JOIN department d on d.id = p.department_id
				LEFT JOIN warehouse w on w.id = tso.warehouse_id
			WHERE tso.id = #{id,jdbcType=INTEGER}

	</select>
  
  <!--定义一个sql片段-->
	<sql id="query_where">
	 	<if test="warehouseId!=null and warehouseId!='-1'">
			AND tso.warehouse_id = #{warehouseId}
		</if>
		<if test='stateType=="1" and stateType!="-1"'>
			AND tso.state IN (1) and tso.is_delete=0
		</if>
		<if test='stateType=="2" and stateType!=-"1"'>
			AND tso.state IN (2)
		</if>
		<if test='stateType=="3" and stateType!=-"1"'>
			AND tso.state IN (3,5)
		</if>
		<if test='stateType=="4" and stateType!="-1"'>
			AND tso.state IN (4,6)
		</if>
		<if test='stateType=="5" and stateType!=-"1"'>
			AND tso.state IN (7)
		</if>
	 
		<!--<if test="stateType!=null and stateType!=-1">-->
			<!--AND tso.state = #{stateType}-->
		<!--</if>-->
		<!-- 已删除 -->
		<if test='stateType=="isDelete"'>
				AND tso.is_delete=1
		</if>
		<if test="originator!=null and originator!=''">
			AND u.name like '%${originator}%'
		</if>
		<!--时间  -->
		<if test="beginTime!=null and beginTime!=''">
			AND
			tso.take_stock_date
			BETWEEN
			'${beginTime}'
			AND
			'${closeTime}'
		</if>
	</sql>
  
  <!-- datatable 分页 start -->
    <!-- 查询记录总条数 -->
	<select id="iTotalRecords" resultType="java.lang.Integer">
		SELECT
			count(1)
		FROM
			take_stock_order tso
		LEFT JOIN person u on u.identifier = tso.originator
		LEFT JOIN warehouse w on w.id = tso.warehouse_id
		where 1=1
		<if test="page==2">
			and tso.state != 1
		</if>
		<if test="page==3">
			and tso.state = 3
		</if>
		<if test="page==4">
			and tso.state = 5
		</if>
		
	</select>
	<!-- 查询所有信息 结果集 -->
	<select id="selectForSearch" resultMap="BaseResultMap">
		
		 SELECT
			tso.id,
			tso.take_stock_date,
			tso.identifier,
			tso.summary,
			tso.originator,
			tso.state,
			tso.print_num,
			w.name wName,
			u.name uName,
			tso.is_delete
		FROM
			take_stock_order tso
		LEFT JOIN person u on u.identifier = tso.originator
		LEFT JOIN warehouse w on w.id = tso.warehouse_id
		where 1=1
		<include refid="query_where"></include>
		<if test="page==2">
			and tso.state != 1
		</if>
		<if test="page==3">
			and tso.state = 3
		</if>
		<if test="page==4">
			and tso.state = 5
		</if>
		<if test="desc!=null and desc!='' ">
			order by ${desc} desc
		</if>
		<if test="asc!=null and asc!=''">
			order by ${asc} asc
		</if>
		limit ${iDisplayStart},${pageDisplayLength}
	</select>
	<!-- 通过搜索条件过滤后的总记录 -->
	<select id="iTotalDisplayRecords" resultType="java.lang.Integer">
		SELECT
			count(1)
		FROM
			take_stock_order tso
		LEFT JOIN person u on u.identifier = tso.originator
		LEFT JOIN warehouse w on w.id = tso.warehouse_id
		where 1=1
		<include refid="query_where"></include>
		<if test="page==2">
			and tso.state != 1
		</if>
		<if test="page==3">
			and tso.state = 3
		</if>
		<if test="page==4">
			and tso.state = 5
		</if>	
	</select>
	
	<!-- datatable 分页 end -->
	<!--盘点单报表  -->
	<!--基础查询条件  -->
	<sql id="query_where_base">
	  	<!--单号  -->
		<if test="identifier!=null and identifier!=''">
			AND tso.identifier like '%${identifier}%'
		</if>
		
		<!--商品名称  -->
		<if test="cname!=null and cname!=''">
			AND c.name like '%${cname}%'
		</if>
		<!-- 商品编码 -->
		<if test="commodity_identifier!=null and commodity_identifier!=''">
			AND c.identifier like '%${commodity_identifier}%'
		</if>
		<!--品牌  -->
		<if test="brand!=null and brand!=''">
			AND c.brand like '%${brand}%'
		</if>
		<!--开单部门  -->
		<if test="departmentClassOneId!=null and departmentClassOneId!='' and departmentClassOneId!='-1'">
			AND dk.id='${departmentClassOneId}'
		</if>
		<!--开单人  -->
		<if test="makeOrderPersonId!=null and makeOrderPersonId!='' and makeOrderPersonId!='-1'">
			AND tso.originator='${makeIdentifier}'
		</if>
		<!--审核部门  -->
		<if test="checkDepartmentId!=null and checkDepartmentId!='' and checkDepartmentId!='-1'">
			AND (dr.id='${checkDepartmentId}'  OR dc.id='${checkDepartmentId}')
		</if>
		<!--审核人  -->
		<if test="checkPersonId!=null and checkPersonId!='' and checkPersonId!=-1">
			AND (tso.finance_reviewer='${rewviewIdentifier}' or tso.manager_reviewer='${rewviewIdentifier}')
		</if>
		<!--时间  -->
		<if test="beginTime!=null and beginTime!=''">
			AND
			tso.take_stock_date
			BETWEEN
			'${beginTime}'
			AND
			DATE_ADD('${closeTime}',INTERVAL 1 DAY)
		</if>
		
		<!--仓库  -->
		<if test="warehouseMsgId!=null and warehouseMsgId!='' and warehouseMsgId!=-1">
			AND tso.warehouse_id='${warehouseMsgId}'
		</if>
		
		
		
	</sql>
	<sql id="query_where_state">
		<!-- 待审核 -->
		<if test="state==1 and state!=-1">
			AND tso.state in(3,5)
		</if>
		<!-- 已审核 -->
		<if test="state==2 and state!=-1">
			AND tso.state in (4,6)
		</if>
		<!-- 已入库 -->
		<if test="state==3 and state!=-1">
			AND tso.state=100
		</if>
		<!-- 已出库 -->
		<if test="state==4 and state!=-1">
			AND tso.state=100
		</if>
		<!-- 已开单 -->
		<if test="state==5 and state!=-1">
			AND tso.state=100
		</if>
		<!-- 已终止 -->
		<if test="state==6 and state!=-1">
			AND tso.state=100
		</if>
		<!-- 其他 -->
		<if test="state==7 and state!=-1">
			AND tso.state not in(3,5,4,6,100)
		</if>
	</sql>
	<select id="reportTakeStockOrderMsg" resultMap="BaseResultMap">
			SELECT
			tso.identifier,
			c.identifier cIdentifier,
			c.`name` cName,
			i.occupied_inventory,
			c.brand,
			cs.specification_identifier,
			tso.take_stock_date,
			u.`name` uName,
			tsoc.inventory_num,
			tsoc.profit_or_loss_num,
			tsoc.real_num,
			tsoc.unit_price,
			tsoc.money,
			tso.summary
			FROM
			take_stock_order tso
			LEFT JOIN take_stock_order_commodity tsoc ON tso.id = tsoc.take_stock_order_id
			LEFT JOIN commodity_specification cs ON cs.id = tsoc.commodity_specification_id
			LEFT JOIN commodity c ON c.id = cs.commodity_id
			LEFT JOIN unit u ON u.specification_id = cs.id 
			LEFT JOIN inventory i ON i.specification_id = cs.id
			LEFT JOIN person k ON k.identifier=tso.originator
			LEFT JOIN person r ON r.identifier=tso.manager_reviewer
			LEFT JOIN person pc ON pc.identifier=tso.finance_reviewer
			LEFT JOIN department dk ON dk.id=k.department_id
			LEFT JOIN department dr ON dr.id=r.department_id
			LEFT JOIN department dc ON dc.id=pc.department_id
			LEFT JOIN supcto s ON c.supcto_id=s.id
			LEFT JOIN warehouse w ON w.id = tso.warehouse_id
			where

			tso.is_delete=0

			<!-- tso.state=7 -->
			<include refid="query_where_base" />
			<include refid="query_where_state" />
			GROUP BY
			tsoc.id
			ORDER BY
	 		tso.id desc
	</select>
</mapper>