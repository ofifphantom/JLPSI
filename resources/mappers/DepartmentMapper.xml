<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jl.psi.mapper.DepartmentMapper">
  <resultMap id="BaseResultMap" type="com.jl.psi.model.Department">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="identifier" jdbcType="VARCHAR" property="identifier" />
    <result column="operator_identifier" jdbcType="VARCHAR" property="operatorIdentifier" />
    <result column="operator_time" jdbcType="TIMESTAMP" property="operatorTime" />
    <result column="is_delete" jdbcType="INTEGER" property="isDelete" />
    <association property="person" javaType="com.jl.psi.model.Person"
			resultMap="PersonResultMap" />
  </resultMap>
   <resultMap id="PersonResultMap" type="com.jl.psi.model.Person">
	<id column="pId" jdbcType="INTEGER" property="id" />
	<result column="pName" jdbcType="VARCHAR" property="name" />
	<result column="pIdentifier" jdbcType="VARCHAR" property="identifier" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, identifier, operator_identifier, operator_time,is_delete
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from department
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from department
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jl.psi.model.Department">
    insert into department (id, name, identifier, operator_identifier, 
      operator_time,is_delete)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{identifier,jdbcType=VARCHAR}, #{operatorIdentifier,jdbcType=VARCHAR}, 
      #{operatorTime,jdbcType=TIMESTAMP}, #{isDelete,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.jl.psi.model.Department">
    insert into department
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="identifier != null">
        identifier,
      </if>
      <if test="operatorIdentifier != null">
        operator_identifier,
      </if>
      <if test="operatorTime != null">
        operator_time,
      </if>
      <if test="isDelete != null">
		is_delete,
	  </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
       <if test="identifier != null">
        #{identifier,jdbcType=VARCHAR},
      </if>
      <if test="operatorIdentifier != null">
        #{operatorIdentifier,jdbcType=VARCHAR},
      </if>
      <if test="operatorTime != null">
        #{operatorTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
		#{isDelete,jdbcType=INTEGER},
	  </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jl.psi.model.Department">
    update department
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="identifier != null">
        identifier = #{identifier,jdbcType=VARCHAR},
      </if>
      <if test="operatorIdentifier != null">
        operator_identifier = #{operatorIdentifier,jdbcType=VARCHAR},
      </if>
      <if test="operatorTime != null">
        operator_time = #{operatorTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
		is_delete = #{isDelete,jdbcType=INTEGER},
	  </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jl.psi.model.Department">
    update department
    set name = #{name,jdbcType=VARCHAR}, identifier = #{identifier,jdbcType=VARCHAR},
      operator_identifier = #{operatorIdentifier,jdbcType=VARCHAR},
      operator_time = #{operatorTime,jdbcType=TIMESTAMP},
		is_delete = #{isDelete,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  
  
  <!--获取所有部门 -->
  <select id="getAllDepartment"  resultMap="BaseResultMap">
    select * from department where is_delete = 0
 
  </select>
  
  
  
  
  
  
  
  
  
  
  
    <!--判断关联   根据结算方式id列表从supcto查询获取编号 -->
	<select id="selectDepartmentIdentifierFromSupctoByDepartmentId" parameterType="java.util.List" resultMap="BaseResultMap">
		select DISTINCT(c.identifier) from supcto a, department c where a.department_id= c.id and c.id in(
			<foreach collection="list" item="item" separator=",">
	          #{item}
	      	</foreach>
		)
		and a.state != 11
	</select>
      <!--判断关联   根据结算方式id列表从person查询获取编号 -->
	<select id="selectDepartmentIdentifierFromPersonByDepartmentId" parameterType="java.util.List" resultMap="BaseResultMap">
		select DISTINCT(c.identifier) from person a, department c where a.department_id= c.id and c.id in(
			<foreach collection="list" item="item" separator=",">
	          #{item}
	      	</foreach>
		)
		and a.is_delete = 0
	</select>
	    <!--判断关联   根据结算方式id列表从procure_table查询获取编号 -->
	<select id="selectDepartmentIdentifierFromProcureTableByDepartmentId" parameterType="java.util.List" resultMap="BaseResultMap">
		select DISTINCT(c.identifier) from procure_table a, department c where a.is_delete=0 and a.department_id= c.id and c.id in(
			<foreach collection="list" item="item" separator=",">
	          #{item}
	      	</foreach>
		)
	</select>
  
  <!-- 根据id列表获取信息 -->
	<select id="getDepartmentByIds" parameterType="java.util.List" resultMap="BaseResultMap">
		 select * from department where id  in (
		<foreach collection="list" item="item" separator=",">
          #{item}
      	</foreach>
      	) 

	</select>
	
	<!-- 根据id列表删除信息 -->
	<delete id="deleteDepartmentByIds" parameterType="java.util.List">
 		<!-- delete from department where id in (
      	<foreach collection="list" item="item" separator=",">
          #{item}
      	</foreach> 
      )-->
      update department set is_delete = 1 where id in (
		<foreach collection="list" item="item" separator=",">
			#{item}
		</foreach>
		)

	</delete>
  
   <!-- 增加或编辑前判断是否重复    根据部门名称或结算名称&id查询所有信息 -->
	<select id="checkIsRepeat" resultMap="BaseResultMap">
		select * from department where name = #{name,jdbcType=VARCHAR} 
		<if test="id != null">
	        and id != #{id,jdbcType=INTEGER}
	    </if>
	     and is_delete = 0
	</select>
  
  <!--定义一个sql片段-->
	<sql id="query_where">
		<if test="identifier!=null and identifier!=''">
			AND c.identifier like '%${identifier}%'
		</if>
		<if test="name!=null and name!=''">
			AND c.name like '%${name}%'
		</if>
		<if test="operatorIdentifier!=null and operatorIdentifier!=''">
			AND u.name like '%${operatorIdentifier}%'
		</if>
		<if test="beginTime!=null and beginTime!=''">
			AND date_format(c.operator_time,'%Y-%m-%d') &gt;= #{beginTime}
			AND date_format(c.operator_time,'%Y-%m-%d') &lt;= #{endTime}
		</if>
	</sql>
	
	
	<select id="selectMsgOrderBySearchMsg" resultMap="BaseResultMap">
		 select c.*,u.name pName 
		from department c LEFT JOIN person u on u.identifier=c.operator_identifier
		where 1=1
		<include refid="query_where"></include>
	</select>
	
	
	
	
	<!-- datatable 分页 start -->
    <!-- 查询记录总条数 -->
	<select id="iTotalRecords" resultType="java.lang.Integer">
		select count(1)
		from department c LEFT JOIN person u on u.identifier=c.operator_identifier
	</select>
	<!-- 查询所有信息 结果集 -->
	<select id="selectForSearch" resultMap="BaseResultMap">
		
	    select c.*,u.name pName 
		from department c LEFT JOIN person u on u.identifier=c.operator_identifier
		where 1=1
		<include refid="query_where"></include>
		
		<if test="desc!=null and desc!='' ">
			order by ${desc} desc
		</if>
		<if test="asc!=null and asc!=''">
			order by ${asc} asc
		</if>
		limit ${iDisplayStart},${pageDisplayLength}
	</select>
	<!-- 通过搜索条件过滤后的总记录 -->
	<select id="iTotalDisplayRecords" resultType="java.lang.Integer">
		select count(1)
		from department c LEFT JOIN person u on u.identifier=c.operator_identifier
		where 1=1
		<include refid="query_where"></include>
			
	</select>
    <select id="getClassOnedepartment" resultMap="BaseResultMap">
      	SELECT
		d.id,
		d.`name`
		FROM
		department d
    </select>
  	<select id="getClassTwodepartment" resultMap="BaseResultMap">
  		SELECT
		p.id pId,
		p.`name` pName,
		p.identifier pIdentifier
		FROM
		department d
		LEFT JOIN
		person p
		ON
		p.department_id=#{departmentId}
		WHERE p.business = 1 AND p.is_delete = 0
		GROUP BY p.id
  	</select>
</mapper>